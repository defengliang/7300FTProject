<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Direct API Calls" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 1 - Inward EDDA Cancellation" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientSysId&quot;: &quot;FPS&quot;,&#xd;
  &quot;clientReqId&quot;: &quot;EC004${date}${clientReqId}&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;FPS&quot;,&#xd;
  &quot;businessService&quot;: &quot;EDDA01&quot;,&#xd;
  &quot;msgType&quot;: &quot;EDDA_CANCELLATION&quot;,&#xd;
  &quot;data&quot;: &quot;{\&quot;requestId\&quot;:\&quot;EC004${date}${clientReqId}\&quot;,\&quot;mandateId\&quot;:\&quot;/DDAE/004/MNDT${date}${clientReqId}\&quot;,\&quot;reason\&quot;:\&quot;REQUEST_BY_CUSTOMER\&quot;,\&quot;reasonInfo\&quot;:null,\&quot;originalMandate\&quot;:{\&quot;mandateType\&quot;:\&quot;PAPER_BASED_ELECTRONIC_MANDATE\&quot;,\&quot;recurrent\&quot;:true,\&quot;period\&quot;:\&quot;ADHOC\&quot;,\&quot;countPerPeriod\&quot;:999,\&quot;startDate\&quot;:1405353600000,\&quot;expiryDate\&quot;:1538409600000,\&quot;trackingInd\&quot;:false,\&quot;colAmt\&quot;:null,\&quot;colAmtCurrency\&quot;:null,\&quot;maxAmt\&quot;:99999999.00,\&quot;maxAmtCurrency\&quot;:\&quot;HKD\&quot;,\&quot;creditorName\&quot;:\&quot;SHACOMBANK\&quot;,\&quot;creditorCorporate\&quot;:null,\&quot;creditorCustId\&quot;:null,\&quot;creditorAgent\&quot;:\&quot;025\&quot;,\&quot;creditorAgentBic\&quot;:null,\&quot;creditorAcctId\&quot;:\&quot;77435500038\&quot;,\&quot;creditorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;debtorName\&quot;:\&quot;LEE MONG NGA\&quot;,\&quot;debtorCorporate\&quot;:null,\&quot;debtorCustId\&quot;:null,\&quot;debtorId1\&quot;:null,\&quot;debtorIdType1\&quot;:null,\&quot;debtorId2\&quot;:null,\&quot;debtorIdType2\&quot;:null,\&quot;debtorId3\&quot;:null,\&quot;debtorIdType3\&quot;:null,\&quot;debtorAgent\&quot;:\&quot;004\&quot;,\&quot;debtorAgentBic\&quot;:null,\&quot;debtorAcctId\&quot;:\&quot;4756018190\&quot;,\&quot;debtorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;ultimateDebtorName\&quot;:\&quot;LEE MONG NGA\&quot;,\&quot;creditorReference\&quot;:\&quot;PL47128410${clientReqId}\&quot;}}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 1b - Inward EDDA Cancellation (null recurrent)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientSysId&quot;: &quot;FPS&quot;,&#xd;
  &quot;clientReqId&quot;: &quot;EC004${date}${clientReqId}&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;FPS&quot;,&#xd;
  &quot;businessService&quot;: &quot;EDDA01&quot;,&#xd;
  &quot;msgType&quot;: &quot;EDDA_CANCELLATION&quot;,&#xd;
  &quot;data&quot;: &quot;{\&quot;requestId\&quot;:\&quot;EC004${date}${clientReqId}\&quot;,\&quot;mandateId\&quot;:\&quot;/DDAE/004/MNDT${date}${clientReqId}\&quot;,\&quot;reason\&quot;:\&quot;REQUEST_BY_CUSTOMER\&quot;,\&quot;reasonInfo\&quot;:null,\&quot;originalMandate\&quot;:{\&quot;mandateType\&quot;:\&quot;PAPER_BASED_ELECTRONIC_MANDATE\&quot;,\&quot;recurrent\&quot;:null,\&quot;period\&quot;:null,\&quot;countPerPeriod\&quot;:null,\&quot;startDate\&quot;:1405353600000,\&quot;expiryDate\&quot;:1538409600000,\&quot;trackingInd\&quot;:false,\&quot;colAmt\&quot;:null,\&quot;colAmtCurrency\&quot;:null,\&quot;maxAmt\&quot;:99999999.00,\&quot;maxAmtCurrency\&quot;:\&quot;HKD\&quot;,\&quot;creditorName\&quot;:\&quot;SHACOMBANK\&quot;,\&quot;creditorCorporate\&quot;:null,\&quot;creditorCustId\&quot;:null,\&quot;creditorAgent\&quot;:\&quot;025\&quot;,\&quot;creditorAgentBic\&quot;:null,\&quot;creditorAcctId\&quot;:\&quot;77435500038\&quot;,\&quot;creditorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;debtorName\&quot;:\&quot;LEE MONG NGA\&quot;,\&quot;debtorCorporate\&quot;:null,\&quot;debtorCustId\&quot;:null,\&quot;debtorId1\&quot;:null,\&quot;debtorIdType1\&quot;:null,\&quot;debtorId2\&quot;:null,\&quot;debtorIdType2\&quot;:null,\&quot;debtorId3\&quot;:null,\&quot;debtorIdType3\&quot;:null,\&quot;debtorAgent\&quot;:\&quot;004\&quot;,\&quot;debtorAgentBic\&quot;:null,\&quot;debtorAcctId\&quot;:\&quot;4756018190\&quot;,\&quot;debtorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;ultimateDebtorName\&quot;:\&quot;LEE MONG NGA\&quot;,\&quot;creditorReference\&quot;:\&quot;PL47128410${clientReqId}\&quot;}}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg/v1/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 1a - Inward EDDA Cancellation (Invalid clientReqId)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientSysId&quot;: &quot;FPS&quot;,&#xd;
  &quot;clientReqId&quot;: &quot;WHY004${date}${clientReqId}&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;FPS&quot;,&#xd;
  &quot;businessService&quot;: &quot;EDDA01&quot;,&#xd;
  &quot;msgType&quot;: &quot;EDDA_CANCELLATION&quot;,&#xd;
  &quot;data&quot;: &quot;{\&quot;requestId\&quot;:\&quot;WHY004${date}${clientReqId}\&quot;,\&quot;mandateId\&quot;:\&quot;/DDAE/004/MNDT${date}${clientReqId}\&quot;,\&quot;reason\&quot;:\&quot;REQUEST_BY_CUSTOMER\&quot;,\&quot;reasonInfo\&quot;:null,\&quot;originalMandate\&quot;:{\&quot;mandateType\&quot;:\&quot;PAPER_BASED_ELECTRONIC_MANDATE\&quot;,\&quot;recurrent\&quot;:true,\&quot;period\&quot;:\&quot;ADHOC\&quot;,\&quot;countPerPeriod\&quot;:999,\&quot;startDate\&quot;:1405353600000,\&quot;expiryDate\&quot;:1538409600000,\&quot;trackingInd\&quot;:false,\&quot;colAmt\&quot;:null,\&quot;colAmtCurrency\&quot;:null,\&quot;maxAmt\&quot;:99999999.00,\&quot;maxAmtCurrency\&quot;:\&quot;HKD\&quot;,\&quot;creditorName\&quot;:\&quot;SHACOMBANK\&quot;,\&quot;creditorCorporate\&quot;:null,\&quot;creditorCustId\&quot;:null,\&quot;creditorAgent\&quot;:\&quot;025\&quot;,\&quot;creditorAgentBic\&quot;:null,\&quot;creditorAcctId\&quot;:\&quot;77435500038\&quot;,\&quot;creditorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;debtorName\&quot;:\&quot;LEE MONG NGA\&quot;,\&quot;debtorCorporate\&quot;:null,\&quot;debtorCustId\&quot;:null,\&quot;debtorId1\&quot;:null,\&quot;debtorIdType1\&quot;:null,\&quot;debtorId2\&quot;:null,\&quot;debtorIdType2\&quot;:null,\&quot;debtorId3\&quot;:null,\&quot;debtorIdType3\&quot;:null,\&quot;debtorAgent\&quot;:\&quot;004\&quot;,\&quot;debtorAgentBic\&quot;:null,\&quot;debtorAcctId\&quot;:\&quot;4756018190\&quot;,\&quot;debtorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;ultimateDebtorName\&quot;:\&quot;LEE MONG NGA\&quot;,\&quot;creditorReference\&quot;:\&quot;PL47128410${clientReqId}\&quot;}}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg/v1/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 2 - Inward Addressing Status Update Notification" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;AUICL201901010000000000&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;ADDR01&quot;,&#xd;
   &quot;msgType&quot;: &quot;ADDRESSING_STATUS_UPDATE_NTF&quot;,&#xd;
   &quot;data&quot;: &quot;{ \&quot;agent\&quot;: \&quot;ICL\&quot;, \&quot;clientReqId\&quot;: \&quot;AUICL201901010000000000\&quot;, \&quot;clientSysId\&quot;: \&quot;HKICL\&quot;, \&quot;createDt\&quot;: \&quot;2019-01-01T00:00:00.000Z\&quot;, \&quot;custId\&quot;: \&quot;C02080000\&quot;, \&quot;defaultIndicator\&quot;: null, \&quot;proxyId\&quot;: \&quot;02080000@email.com\&quot;, \&quot;proxyIdType\&quot;: \&quot;EMAL\&quot;, \&quot;purposeCode\&quot;: \&quot;PAYM\&quot;, \&quot;reqNtfAction\&quot;: \&quot;RCYC\&quot;, \&quot;reqNtfId\&quot;: \&quot;AU000201802220000000000\&quot;, \&quot;requestIndicator\&quot;: false, \&quot;state\&quot;: \&quot;0\&quot;, \&quot;status\&quot;: \&quot;RCYC\&quot;, \&quot;statusUpdateTime\&quot;: \&quot;2018-12-31T23:59:59.000\&quot;, \&quot;userId\&quot;: \&quot;HKICL\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 3 - Inward Credit Transfer" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT${date}${clientReqId}&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC03&quot;,&#xd;
   &quot;msgType&quot;: &quot;CREDIT_TRANSFER&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;acctVerificationOption\&quot;: \&quot;IMD_STTL\&quot;,\&quot;categoryPurpose\&quot;: \&quot;CXTOPU\&quot;,\&quot;settlementAmt\&quot;: ${settlementAmt},\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;${ISOdate}\&quot;, \&quot;instructedAmt\&quot;: ${settlementAmt},\&quot;instructedCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAmt\&quot;: 0,\&quot;chargeCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAgent\&quot;: \&quot;\&quot;,\&quot;chargeAgentBic\&quot;: \&quot;\&quot;,\&quot;debtorName\&quot;: \&quot;Generic Kindergarten\&quot;,\&quot;isDebtorCorporate\&quot;: false,\&quot;debtorBic\&quot;: \&quot;\&quot;,\&quot;debtorContactMobile\&quot;: \&quot;\&quot;,\&quot;debtorContactEmail\&quot;: \&quot;\&quot;,\&quot;debtorAgent\&quot;: \&quot;004\&quot;,\&quot;debtorAgentBic\&quot;: \&quot;\&quot;,\&quot;debtorAcctId\&quot;: \&quot;2667343\&quot;,\&quot;debtorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;creditorName\&quot;: \&quot;Ho Mai Li\&quot;,\&quot;isCreditorCorporate\&quot;: \&quot;false\&quot;,\&quot;creditorCustId\&quot;: \&quot;\&quot;,\&quot;creditorBic\&quot;: \&quot;\&quot;,\&quot;creditorContactMobile\&quot;: \&quot;\&quot;,\&quot;creditorContactEmail\&quot;: \&quot;\&quot;,\&quot;creditorAgent\&quot;: \&quot;389\&quot;,\&quot;creditorAgentBic\&quot;: \&quot;\&quot;,\&quot;creditorAcctId\&quot;: \&quot;0878946223\&quot;,\&quot;creditorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;purpose\&quot;: \&quot;ALLW\&quot;,\&quot;purposeInfo\&quot;: \&quot;\&quot;,\&quot;remittanceInfo\&quot;: \&quot;SCB UAT#92 inward\&quot;,\&quot;settlementDatetime\&quot;: \&quot;${ISOdate}T05:10:00.052Z\&quot;,\&quot;transactionId\&quot;:\&quot;CT${date}${clientReqId}\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;FRN${date}${clientReqId}\&quot;,\&quot;instructionId\&quot;:\&quot;\&quot;,\&quot;endToEndId\&quot;:\&quot;NOTPROVIDED\&quot;,\&quot;businessService\&quot;:\&quot;PAYC03\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 4 - Payment Status Report (Sc.F)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT${date}${clientReqId}&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;InsertReply&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC02&quot;,&#xd;
   &quot;msgType&quot;: &quot;PAYMENT_STATUS_REPORT&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;statusReqId\&quot;:\&quot;STS${date}${clientReqId}\&quot;,\&quot;endToEndId\&quot;:\&quot;NOTPROVIDED\&quot;,\&quot;transactionId\&quot;:\&quot;CT${date}${clientReqId}\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;FRN${date}${clientReqId}\&quot;,\&quot;settlementAmt\&quot;:10.00,\&quot;settlementCurrency\&quot;:\&quot;HKD\&quot;,\&quot;settlementDate\&quot;:\&quot;${ISOdate}\&quot;,\&quot;settlementDatetime\&quot;:\&quot;${ISOdate}T01:45:26.052Z\&quot;,\&quot;transactionStatus\&quot;:\&quot;ACSC\&quot;,\&quot;businessService\&quot;:\&quot;PAYC02\&quot;,\&quot;statusReason\&quot;:null,\&quot;statusReasonInfo1\&quot;:\&quot;/FPSINF/VRF_STTL\&quot;,\&quot;statusReasonInfo2\&quot;:null,\&quot;statusReasonInfo3\&quot;:null}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg/v1/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 4a1 - Payment Status Report (Sc.F) ACSC" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT2020011604073732515060087249&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;InsertReply&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
   &quot;msgType&quot;: &quot;PAYMENT_STATUS_REPORT&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;statusReqId\&quot;:\&quot;STSCT2020011604073732515060087249\&quot;,\&quot;endToEndId\&quot;:\&quot;NOTPROVIDED\&quot;,\&quot;transactionId\&quot;:\&quot;CT2020011604073732515060087249\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;FRN202001169ow4ubR9M\&quot;,\&quot;settlementAmt\&quot;:${settlementAmt},\&quot;settlementCurrency\&quot;:\&quot;HKD\&quot;,\&quot;settlementDate\&quot;:\&quot;${ISOdate}\&quot;,\&quot;settlementDatetime\&quot;:\&quot;${ISOdate}T16:13:15.052Z\&quot;,\&quot;transactionStatus\&quot;:\&quot;ACSC\&quot;,\&quot;businessService\&quot;:\&quot;PAYC01\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 4a2 - Payment Status Report (Sc.F) ICL RJCT" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT2020011604073732515060087249&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;InsertReply&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
   &quot;msgType&quot;: &quot;PAYMENT_STATUS_REPORT&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;statusReqId\&quot;:\&quot;STSCT2020011604073732515060087249\&quot;,\&quot;endToEndId\&quot;:\&quot;NOTPROVIDED\&quot;,\&quot;transactionId\&quot;:\&quot;CT2020011604073732515060087249\&quot;,\&quot;fpsReferenceNo\&quot;:null,\&quot;settlementAmt\&quot;:${settlementAmt},\&quot;settlementCurrency\&quot;:\&quot;HKD\&quot;,\&quot;settlementDate\&quot;:\&quot;${ISOdate}\&quot;,\&quot;settlementDatetime\&quot;:\&quot;${ISOdate}T16:13:15.052Z\&quot;,\&quot;transactionStatus\&quot;:\&quot;RJCT\&quot;,\&quot;businessService\&quot;:\&quot;PAYC01\&quot;,\&quot;statusReason\&quot;:\&quot;PAY10003\&quot;,\&quot;statusReasonInfo1\&quot;:\&quot;/REASON/Invalid Credit Participant\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case AMCM RTMG Inward" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;FpsMsg&gt;&#xd;
	&lt;MsgHdr&gt;&lt;/MsgHdr&gt;&#xd;
	&lt;MsgBody&gt;&#xd;
		&lt;BizData&gt;&#xd;
			&lt;AppHdr&gt;&#xd;
				&lt;Fr&gt;&lt;FIId&gt;&lt;FinInstnId&gt;&lt;ClrSysMmbId&gt;&lt;MmbId&gt;888&lt;/MmbId&gt;&lt;/ClrSysMmbId&gt;&lt;/FinInstnId&gt;&lt;/FIId&gt;&lt;/Fr&gt;&#xd;
				&lt;To&gt;&lt;FIId&gt;&lt;FinInstnId&gt;&lt;ClrSysMmbId&gt;&lt;MmbId&gt;000&lt;/MmbId&gt;&lt;/ClrSysMmbId&gt;&lt;/FinInstnId&gt;&lt;/FIId&gt;&lt;/To&gt;&#xd;
				&lt;BizMsgIdr&gt;MSG88820230316000046237324&lt;/BizMsgIdr&gt;&#xd;
				&lt;MsgDefIdr&gt;admi.002.001.01&lt;/MsgDefIdr&gt;&#xd;
				&lt;BizSvc&gt;ADMIS&lt;/BizSvc&gt;&#xd;
				&lt;CreDt&gt;2023-03-16T09:00:00&lt;/CreDt&gt;&#xd;
				&lt;Prty&gt;HIGH&lt;/Prty&gt;&#xd;
			&lt;/AppHdr&gt;&#xd;
			&lt;Document&gt;&#xd;
				&lt;admi.002.001.01&gt;&#xd;
					&lt;RltdRef&gt;&#xd;
						&lt;Ref&gt;NOREF&lt;/Ref&gt;&#xd;
					&lt;/RltdRef&gt;&#xd;
					&lt;Rsn&gt;&#xd;
						&lt;RjctgPtyRsn&gt;COM002&lt;/RjctgPtyRsn&gt;&#xd;
						&lt;RjctnDtTm&gt;2023-03-16T09:00:01&lt;/RjctnDtTm&gt;&#xd;
						&lt;RsnDesc&gt;Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. Cert is not found. &lt;/RsnDesc&gt;&#xd;
					&lt;/Rsn&gt;&#xd;
				&lt;/admi.002.001.01&gt;&#xd;
			&lt;/Document&gt;&#xd;
		&lt;/BizData&gt;&#xd;
	&lt;/MsgBody&gt;&#xd;
&lt;/FpsMsg&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/rtmgservice/fps/client/api</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">apiKey</stringProp>
                <stringProp name="Header.value">AD2569E2DF1F11E79600080027DC4303</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-system-id</stringProp>
                <stringProp name="Header.value">JMETER</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 4a3 - Payment Status Report (Sc.F) Counterparty RJCT" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT2020011604073732515060087249&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;InsertReply&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
   &quot;msgType&quot;: &quot;PAYMENT_STATUS_REPORT&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;statusReqId\&quot;:\&quot;STSCT2020011604073732515060087249\&quot;,\&quot;endToEndId\&quot;:\&quot;NOTPROVIDED\&quot;,\&quot;transactionId\&quot;:\&quot;CT2020011604073732515060087249\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;FRN202001169ow4ubR9M\&quot;,\&quot;settlementAmt\&quot;:${settlementAmt},\&quot;settlementCurrency\&quot;:\&quot;HKD\&quot;,\&quot;settlementDate\&quot;:\&quot;${ISOdate}\&quot;,\&quot;settlementDatetime\&quot;:\&quot;${ISOdate}T16:13:15.052Z\&quot;,\&quot;transactionStatus\&quot;:\&quot;RJCT\&quot;,\&quot;businessService\&quot;:\&quot;PAYC01\&quot;,\&quot;statusReason\&quot;:\&quot;BE01\&quot;,\&quot;statusReasonInfo1\&quot;:\&quot;/REASON/Inconsistent with End Customer\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 4b - Payment Status Report (Supp Info)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;${transactionId}&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;InsertReply&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
   &quot;msgType&quot;: &quot;PAYMENT_STATUS_REPORT&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;statusReqId\&quot;:\&quot;${transactionId}\&quot;,\&quot;endToEndId\&quot;:\&quot;NOTPROVIDED\&quot;,\&quot;transactionId\&quot;:\&quot;${transactionId}\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;${fpsReferenceNo}\&quot;,\&quot;settlementCurrency\&quot;:\&quot;HKD\&quot;,\&quot;settlementDate\&quot;:\&quot;${ISOdate}\&quot;,\&quot;transactionStatus\&quot;:\&quot;ACCC\&quot;,\&quot;businessService\&quot;:\&quot;CRINFH\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="transactionId" elementType="Argument">
                <stringProp name="Argument.name">transactionId</stringProp>
                <stringProp name="Argument.value">CT2020011604073732519441518024</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="fpsReferenceNo" elementType="Argument">
                <stringProp name="Argument.name">fpsReferenceNo</stringProp>
                <stringProp name="Argument.value">FRN20200116Z75lRR737</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 8a - Outward Credit Transfer (PAYC01)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;balanceReference&quot;: &quot;&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
   &quot;categoryPurpose&quot;: &quot;CXMRCH&quot;,&#xd;
   &quot;charge&quot;: 0,&#xd;
   &quot;chargeReference&quot;: &quot;&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT${date}1${clientReqId}&quot;,&#xd;
   &quot;clientSysId&quot;: &quot;PBP2PSV&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;creditorAcctId&quot;: &quot;0878946223&quot;,&#xd;
   &quot;creditorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
   &quot;creditorAgent&quot;: &quot;004&quot;,&#xd;
   &quot;creditorName&quot;: &quot;Alpha Cheung and Beta Cheung&quot;,&#xd;
   &quot;debtorAcctId&quot;: &quot;654791321987&quot;,&#xd;
   &quot;debtorName&quot;: &quot;Chan Tai Tai&quot;,&#xd;
   &quot;instructionId&quot;: &quot;&quot;,&#xd;
   &quot;endToEndId&quot;: &quot;&quot;,&#xd;
   &quot;creditorCustId&quot;: &quot;1111111&quot;,&#xd;
   &quot;creditorCorporate&quot;: false,&#xd;
   &quot;options&quot;: {},&#xd;
   &quot;purpose&quot;: &quot;ALLW&quot;,&#xd;
   &quot;purposeInfo&quot;: &quot;&quot;,&#xd;
   &quot;remittanceInfo&quot;: &quot;0&quot;,&#xd;
   &quot;settlementAmt&quot;: 1.08,&#xd;
   &quot;settlementCurrency&quot;: &quot;HKD&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/creditTransfer?async=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 8a7 - Outward Credit Transfer (PAYC01 ONUS)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;balanceReference&quot;: &quot;&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
   &quot;categoryPurpose&quot;: &quot;CXMRCH&quot;,&#xd;
   &quot;charge&quot;: 0,&#xd;
   &quot;chargeReference&quot;: &quot;&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT${date}1${clientReqId}&quot;,&#xd;
   &quot;clientSysId&quot;: &quot;PBP2PSV&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;creditorAcctId&quot;: &quot;0878946223&quot;,&#xd;
   &quot;creditorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
   &quot;creditorAgent&quot;: &quot;389&quot;,&#xd;
   &quot;creditorName&quot;: &quot;Ho Mai Li&quot;,&#xd;
   &quot;debtorAcctId&quot;: &quot;654791321987&quot;,&#xd;
   &quot;debtorName&quot;: &quot;Chan Tai Tai&quot;,&#xd;
   &quot;instructionId&quot;: &quot;&quot;,&#xd;
   &quot;endToEndId&quot;: &quot;&quot;,&#xd;
   &quot;creditorCustId&quot;: &quot;1111111&quot;,&#xd;
   &quot;creditorCorporate&quot;: false,&#xd;
   &quot;options&quot;: {},&#xd;
   &quot;purpose&quot;: &quot;ALLW&quot;,&#xd;
   &quot;purposeInfo&quot;: &quot;&quot;,&#xd;
   &quot;remittanceInfo&quot;: &quot;0&quot;,&#xd;
   &quot;settlementAmt&quot;: 1.08,&#xd;
   &quot;settlementCurrency&quot;: &quot;HKD&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/creditTransfer?async=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 8a5.1 - Outward Credit Transfer (PAYC01)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;balanceReference&quot;: &quot;&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC02&quot;,&#xd;
   &quot;categoryPurpose&quot;: &quot;CXMRCH&quot;,&#xd;
   &quot;charge&quot;: 0,&#xd;
   &quot;chargeReference&quot;: &quot;&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT${date}3${clientReqId}&quot;,&#xd;
   &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;creditorAcctId&quot;: &quot;0878946223&quot;,&#xd;
   &quot;creditorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
   &quot;creditorAgent&quot;: &quot;389&quot;,&#xd;
   &quot;creditorName&quot;: &quot;Alpha Cheung and Beta Cheung&quot;,&#xd;
   &quot;debtorAcctId&quot;: &quot;201791321987&quot;,&#xd;
   &quot;debtorName&quot;: &quot;Goooooooooooooooooooooooooooo&quot;,&#xd;
   &quot;instructionId&quot;: &quot;&quot;,&#xd;
   &quot;endToEndId&quot;: &quot;&quot;,&#xd;
   &quot;creditorCustId&quot;: &quot;1111111&quot;,&#xd;
   &quot;creditorCorporate&quot;: false,&#xd;
   &quot;options&quot;: {},&#xd;
   &quot;purpose&quot;: &quot;ALLW&quot;,&#xd;
   &quot;purposeInfo&quot;: &quot;&quot;,&#xd;
   &quot;remittanceInfo&quot;: &quot;0&quot;,&#xd;
   &quot;settlementAmt&quot;: 573.07,&#xd;
   &quot;settlementCurrency&quot;: &quot;HKD&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/creditTransfer?async=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 8a5.2 - Outward Credit Transfer (PAYC01)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;balanceReference&quot;: &quot;&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
   &quot;categoryPurpose&quot;: &quot;CXMRCH&quot;,&#xd;
   &quot;charge&quot;: 0,&#xd;
   &quot;chargeReference&quot;: &quot;&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT${date}2${clientReqId}&quot;,&#xd;
   &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;creditorAcctId&quot;: &quot;0878946223&quot;,&#xd;
   &quot;creditorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
   &quot;creditorAgent&quot;: &quot;004&quot;,&#xd;
   &quot;creditorName&quot;: &quot;Alpha Cheung and Beta Cheung&quot;,&#xd;
   &quot;debtorAcctId&quot;: &quot;301791321987&quot;,&#xd;
   &quot;debtorName&quot;: &quot;Generic Kindergarten&quot;,&#xd;
   &quot;instructionId&quot;: &quot;&quot;,&#xd;
   &quot;endToEndId&quot;: &quot;&quot;,&#xd;
   &quot;creditorCustId&quot;: &quot;1111111&quot;,&#xd;
   &quot;creditorCorporate&quot;: false,&#xd;
   &quot;options&quot;: {},&#xd;
   &quot;purpose&quot;: &quot;ALLW&quot;,&#xd;
   &quot;purposeInfo&quot;: &quot;&quot;,&#xd;
   &quot;remittanceInfo&quot;: &quot;0&quot;,&#xd;
   &quot;settlementAmt&quot;: 1840.0,&#xd;
   &quot;settlementCurrency&quot;: &quot;HKD&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/creditTransfer?async=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 8a - Outward Credit Transfer (PAYC01)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;balanceReference&quot;: &quot;&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
   &quot;categoryPurpose&quot;: &quot;CXMRCH&quot;,&#xd;
   &quot;charge&quot;: 0,&#xd;
   &quot;chargeReference&quot;: &quot;&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT${date}1${clientReqId}&quot;,&#xd;
   &quot;clientSysId&quot;: &quot;boa&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;creditorAcctId&quot;: &quot;0878946223&quot;,&#xd;
   &quot;creditorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
   &quot;creditorAgent&quot;: &quot;004&quot;,&#xd;
   &quot;creditorName&quot;: &quot;Johnston&quot;,&#xd;
   &quot;debtorAcctId&quot;: &quot;654791321987&quot;,&#xd;
   &quot;debtorName&quot;: &quot;Generic Kindergarten&quot;,&#xd;
   &quot;instructionId&quot;: &quot;&quot;,&#xd;
   &quot;endToEndId&quot;: &quot;&quot;,&#xd;
   &quot;creditorCustId&quot;: &quot;1111111&quot;,&#xd;
   &quot;creditorCorporate&quot;: false,&#xd;
   &quot;options&quot;: {},&#xd;
   &quot;purpose&quot;: &quot;ALLW&quot;,&#xd;
   &quot;purposeInfo&quot;: &quot;&quot;,&#xd;
   &quot;remittanceInfo&quot;: &quot;0&quot;,&#xd;
   &quot;settlementAmt&quot;: 3.00,&#xd;
   &quot;settlementCurrency&quot;: &quot;HKD&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/creditTransfer?async=false</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 8a4 - Outward Credit Transfer (PAYC01) for charge" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;balanceReference&quot;: &quot;&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
   &quot;categoryPurpose&quot;: &quot;CXMRCH&quot;,&#xd;
   &quot;charge&quot;: 0,&#xd;
   &quot;chargeReference&quot;: &quot;&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT${date}1${clientReqId}&quot;,&#xd;
   &quot;clientSysId&quot;: &quot;callback_test&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;creditorAcctId&quot;: &quot;2667343&quot;,&#xd;
   &quot;creditorAcctIdType&quot;: &quot;SVID&quot;,&#xd;
   &quot;creditorAgent&quot;: &quot;040&quot;,&#xd;
   &quot;creditorName&quot;: &quot;sss&quot;,&#xd;
   &quot;debtorAcctId&quot;: &quot;654791321987&quot;,&#xd;
   &quot;debtorName&quot;: &quot;Generic Kindergarten&quot;,&#xd;
   &quot;instructionId&quot;: &quot;&quot;,&#xd;
   &quot;endToEndId&quot;: &quot;220234202&quot;,&#xd;
   &quot;creditorCustId&quot;: &quot;0805&quot;,&#xd;
   &quot;creditorCorporate&quot;: false,&#xd;
   &quot;options&quot;: {&quot;SKIP_PROXY_RESOLUTION&quot;: false},&#xd;
   &quot;purpose&quot;: &quot;ALLW&quot;,&#xd;
   &quot;purposeInfo&quot;: &quot;&quot;,&#xd;
   &quot;remittanceInfo&quot;: &quot;0&quot;,&#xd;
   &quot;settlementAmt&quot;: ${settlementAmt},&#xd;
   &quot;settlementCurrency&quot;: &quot;HKD&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/creditTransfer?async=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">true</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 8a2 - OCT (SKIP_ACCT_VALIDATION)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;balanceReference&quot;: &quot;&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
   &quot;categoryPurpose&quot;: &quot;CXGOVT&quot;,&#xd;
   &quot;charge&quot;: 0,&#xd;
   &quot;chargeReference&quot;: &quot;&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT${date}1${clientReqId}&quot;,&#xd;
   &quot;clientSysId&quot;: &quot;boa&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;creditorAcctId&quot;: &quot;0878946223&quot;,&#xd;
   &quot;creditorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
   &quot;creditorAgent&quot;: &quot;004&quot;,&#xd;
   &quot;creditorName&quot;: &quot;Johnston&quot;,&#xd;
   &quot;debtorAcctId&quot;: &quot;654791321987&quot;,&#xd;
   &quot;debtorName&quot;: &quot;Generic Kindergarten&quot;,&#xd;
   &quot;instructionId&quot;: &quot;&quot;,&#xd;
   &quot;endToEndId&quot;: &quot;&quot;,&#xd;
   &quot;creditorCustId&quot;: &quot;1111111&quot;,&#xd;
   &quot;creditorCorporate&quot;: false,&#xd;
   &quot;options&quot;: {&quot;SKIP_PROXY_RESOLUTION&quot;: true,&quot;SKIP_ACCT_VALIDATION&quot;: true},&#xd;
   &quot;purpose&quot;: &quot;ALLW&quot;,&#xd;
   &quot;purposeInfo&quot;: &quot;&quot;,&#xd;
   &quot;remittanceInfo&quot;: &quot;0&quot;,&#xd;
   &quot;settlementAmt&quot;: ${settlementAmt},&#xd;
   &quot;settlementCurrency&quot;: &quot;HKD&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/creditTransfer?async=false</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">true</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 8a3 - OCT (SKIP_ACCT_VALIDATION, SKIP_POST)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;balanceReference&quot;: &quot;STONG&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
   &quot;categoryPurpose&quot;: &quot;CXGOVT&quot;,&#xd;
   &quot;charge&quot;: 0,&#xd;
   &quot;chargeReference&quot;: &quot;&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT${date}1${clientReqId}&quot;,&#xd;
   &quot;clientSysId&quot;: &quot;boa&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;creditorAcctId&quot;: &quot;0878946223&quot;,&#xd;
   &quot;creditorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
   &quot;creditorAgent&quot;: &quot;004&quot;,&#xd;
   &quot;creditorName&quot;: &quot;Johnston&quot;,&#xd;
   &quot;debtorAcctId&quot;: &quot;654791321987&quot;,&#xd;
   &quot;debtorName&quot;: &quot;Generic Kindergarten&quot;,&#xd;
   &quot;instructionId&quot;: &quot;&quot;,&#xd;
   &quot;endToEndId&quot;: &quot;&quot;,&#xd;
   &quot;creditorCustId&quot;: &quot;1111111&quot;,&#xd;
   &quot;creditorCorporate&quot;: false,&#xd;
   &quot;options&quot;: {&quot;SKIP_PROXY_RESOLUTION&quot;: true,&quot;SKIP_ACCT_VALIDATION&quot;: true, &quot;SKIP_DEBIT&quot;: true,&quot;SKIP_CHARGE&quot;:true},&#xd;
   &quot;purpose&quot;: &quot;ALLW&quot;,&#xd;
   &quot;purposeInfo&quot;: &quot;&quot;,&#xd;
   &quot;remittanceInfo&quot;: &quot;0&quot;,&#xd;
   &quot;settlementAmt&quot;: ${settlementAmt},&#xd;
   &quot;settlementCurrency&quot;: &quot;HKD&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/creditTransfer?async=false</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">true</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 8b - Outward Credit Transfer (PAYC02)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;balanceReference&quot;: &quot;&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC02&quot;,&#xd;
   &quot;categoryPurpose&quot;: &quot;CXGOVT&quot;,&#xd;
   &quot;charge&quot;: 0,&#xd;
   &quot;chargeReference&quot;: &quot;&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT${date}2${ran1}${ran2}&quot;,&#xd;
   &quot;clientSysId&quot;: &quot;boa&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;creditorAcctId&quot;: &quot;0878946223&quot;,&#xd;
   &quot;creditorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
   &quot;creditorAgent&quot;: &quot;025&quot;,&#xd;
   &quot;creditorName&quot;: &quot;Johnston&quot;,&#xd;
   &quot;debtorAcctId&quot;: &quot;0878946223&quot;,&#xd;
   &quot;debtorName&quot;: &quot;Generic Kindergarten&quot;,&#xd;
   &quot;instructionId&quot;: &quot;&quot;,&#xd;
   &quot;endToEndId&quot;: &quot;&quot;,&#xd;
   &quot;creditorCustId&quot;: &quot;1111111&quot;,&#xd;
   &quot;creditorCorporate&quot;: false,&#xd;
   &quot;options&quot;: {&quot;SKIP_PROXY_RESOLUTION&quot;: true},&#xd;
   &quot;purpose&quot;: &quot;ALLW&quot;,&#xd;
   &quot;purposeInfo&quot;: &quot;&quot;,&#xd;
   &quot;remittanceInfo&quot;: &quot;123123&quot;,&#xd;
   &quot;settlementAmt&quot;: ${settlementAmt},&#xd;
   &quot;settlementCurrency&quot;: &quot;HKD&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/creditTransfer?async=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">22222</stringProp>
            <stringProp name="outputFormat">00000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed">9328532</stringProp>
            <stringProp name="variableName">ran1</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">00000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed">${ran1}</stringProp>
            <stringProp name="variableName">ran2</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 8c - Outward Credit Transfer (PAYC03)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;balanceReference&quot;: &quot;&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC03&quot;,&#xd;
   &quot;categoryPurpose&quot;: &quot;CXMRCH&quot;,&#xd;
   &quot;charge&quot;: 0,&#xd;
   &quot;chargeReference&quot;: &quot;&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT${date}3${ran1}${ran2}&quot;,&#xd;
   &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;creditorAcctId&quot;: &quot;0878946223&quot;,&#xd;
   &quot;creditorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
   &quot;creditorAgent&quot;: &quot;020&quot;,&#xd;
   &quot;creditorName&quot;: &quot;Johnston&quot;,&#xd;
   &quot;debtorAcctId&quot;: &quot;654791321987&quot;,&#xd;
   &quot;debtorName&quot;: &quot;Generic Kindergarten&quot;,&#xd;
   &quot;instructionId&quot;: &quot;&quot;,&#xd;
   &quot;endToEndId&quot;: &quot;&quot;,&#xd;
   &quot;creditorCustId&quot;: &quot;1111111&quot;,&#xd;
   &quot;creditorCorporate&quot;: false,&#xd;
   &quot;options&quot;: {&quot;SKIP_PROXY_RESOLUTION&quot;: true},&#xd;
   &quot;purpose&quot;: &quot;&quot;,&#xd;
   &quot;purposeInfo&quot;: &quot;CNONEM&quot;,&#xd;
   &quot;remittanceInfo&quot;: &quot;0&quot;,&#xd;
   &quot;settlementAmt&quot;: ${settlementAmt},&#xd;
   &quot;settlementCurrency&quot;: &quot;HKD&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/creditTransfer?async=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">0</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">22222</stringProp>
            <stringProp name="outputFormat">00000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed">9328532</stringProp>
            <stringProp name="variableName">ran1</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">00000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed">${ran1}</stringProp>
            <stringProp name="variableName">ran2</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 8d2 - Outward Credit Transfer (PAYBC)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;balanceReference&quot;: &quot;&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYBC&quot;,&#xd;
   &quot;categoryPurpose&quot;: &quot;SALA&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT${date}R${clientReqId}&quot;,&#xd;
   &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;creditorAcctId&quot;: &quot;0878946223&quot;,&#xd;
   &quot;creditorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
   &quot;creditorAgent&quot;: &quot;004&quot;,&#xd;
   &quot;creditorName&quot;: &quot;Alpha Cheung and Beta Cheung&quot;,&#xd;
   &quot;debtorAcctId&quot;: &quot;301791321987&quot;,&#xd;
   &quot;debtorName&quot;: &quot;Generic Kindergarten&quot;,&#xd;
   &quot;instructionId&quot;: &quot;&quot;,&#xd;
   &quot;endToEndId&quot;: &quot;&quot;,&#xd;
   &quot;creditorCustId&quot;: &quot;1111111&quot;,&#xd;
   &quot;creditorCorporate&quot;: false,&#xd;
   &quot;options&quot;: {},&#xd;
   &quot;purpose&quot;: &quot;ALLW&quot;,&#xd;
   &quot;purposeInfo&quot;: &quot;&quot;,&#xd;
   &quot;remittanceInfo&quot;: &quot;0&quot;,&#xd;
   &quot;settlementAmt&quot;: 10000.0,&#xd;
   &quot;settlementCurrency&quot;: &quot;MOP&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/creditTransfer?async=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 9a - Inward Refund Return" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;RF${datetime}${clientReqId1}${clientReqId2}&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYR01&quot;,&#xd;
   &quot;msgType&quot;: &quot;RETURN_REFUND&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;categoryPurpose\&quot;: \&quot;RPRFND\&quot;,\&quot;settlementAmt\&quot;: 0.01,\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;2020-01-16\&quot;, \&quot;instructedAmt\&quot;: 0.01,\&quot;instructedCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAmt\&quot;: 0,\&quot;chargeCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAgent\&quot;: \&quot;\&quot;,\&quot;returnReason\&quot;:\&quot;REFUND_REQUEST_BY_END_CUSTOMER\&quot;, \&quot;returnReasonInfo1\&quot;:\&quot;\&quot;, \&quot;returnReasonInfo2\&quot;:\&quot;\&quot;, \&quot;originalTransactionReference\&quot;:{\&quot;instructionId\&quot;:\&quot;\&quot;,\&quot;endToEndId\&quot;:\&quot;NOTPROVIDED\&quot;,\&quot;categoryPurpose\&quot;: \&quot;CXGOVT\&quot;,\&quot;settlementAmt\&quot;: 10000.00,\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;2020-01-16\&quot;,\&quot;debtorName\&quot;: \&quot;Generic Kindergarten\&quot;,\&quot;isDebtorCorporate\&quot;: null,\&quot;debtorCustId\&quot;: null,\&quot;debtorBic\&quot;: \&quot;\&quot;,\&quot;debtorContactMobile\&quot;: \&quot;\&quot;,\&quot;debtorContactEmail\&quot;: \&quot;\&quot;,\&quot;debtorAgent\&quot;: \&quot;000\&quot;,\&quot;debtorAgentBic\&quot;: \&quot;\&quot;,\&quot;debtorAcctId\&quot;: \&quot;654791321987\&quot;,\&quot;debtorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;creditorName\&quot;: \&quot;Johnston\&quot;,\&quot;isCreditorCorporate\&quot;: \&quot;false\&quot;,\&quot;creditorCustId\&quot;: \&quot;1111111\&quot;,\&quot;creditorBic\&quot;: \&quot;\&quot;,\&quot;creditorContactMobile\&quot;: \&quot;\&quot;,\&quot;creditorContactEmail\&quot;: \&quot;\&quot;,\&quot;creditorAgent\&quot;: \&quot;004\&quot;,\&quot;creditorAgentBic\&quot;: \&quot;\&quot;,\&quot;creditorAcctId\&quot;: \&quot;0878946223\&quot;,\&quot;creditorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;remittanceInfo\&quot;: \&quot;0\&quot;},\&quot;originalFpsReferenceNo\&quot;:\&quot;FRN20200116D2ay2Pupy\&quot;,\&quot;transactionId\&quot;:\&quot;FRNRF1${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;FRNRF1${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;businessService\&quot;:\&quot;PAYR01\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg/v1/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId1" enabled="true">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">00000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed">165416435247</stringProp>
            <stringProp name="variableName">clientReqId1</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId2" enabled="true">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">00000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed">37</stringProp>
            <stringProp name="variableName">clientReqId2</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 9b - Inward Refund Return" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;RF${datetime}${clientReqId1}${clientReqId2}&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYR01&quot;,&#xd;
   &quot;msgType&quot;: &quot;RETURN_REFUND&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;categoryPurpose\&quot;: \&quot;RPRFND\&quot;,\&quot;settlementAmt\&quot;: 0.01,\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;2020-01-16\&quot;, \&quot;instructedAmt\&quot;: 0.01,\&quot;instructedCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAmt\&quot;: 0,\&quot;chargeCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAgent\&quot;: \&quot;\&quot;,\&quot;returnReason\&quot;:\&quot;REFUND_REQUEST_BY_END_CUSTOMER\&quot;, \&quot;returnReasonInfo1\&quot;:\&quot;\&quot;, \&quot;returnReasonInfo2\&quot;:\&quot;\&quot;, \&quot;originalTransactionReference\&quot;:{\&quot;instructionId\&quot;:\&quot;\&quot;,\&quot;endToEndId\&quot;:\&quot;NOTPROVIDED\&quot;,\&quot;categoryPurpose\&quot;: \&quot;CXGOVT\&quot;,\&quot;settlementAmt\&quot;: 10000.00,\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;2020-01-16\&quot;,\&quot;debtorName\&quot;: \&quot;Generic Kindergarten\&quot;,\&quot;isDebtorCorporate\&quot;: null,\&quot;debtorCustId\&quot;: null,\&quot;debtorBic\&quot;: \&quot;\&quot;,\&quot;debtorContactMobile\&quot;: \&quot;\&quot;,\&quot;debtorContactEmail\&quot;: \&quot;\&quot;,\&quot;debtorAgent\&quot;: \&quot;000\&quot;,\&quot;debtorAgentBic\&quot;: \&quot;\&quot;,\&quot;debtorAcctId\&quot;: \&quot;654791321987\&quot;,\&quot;debtorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;creditorName\&quot;: \&quot;Johnston\&quot;,\&quot;isCreditorCorporate\&quot;: \&quot;false\&quot;,\&quot;creditorCustId\&quot;: \&quot;1111111\&quot;,\&quot;creditorBic\&quot;: \&quot;\&quot;,\&quot;creditorContactMobile\&quot;: \&quot;\&quot;,\&quot;creditorContactEmail\&quot;: \&quot;\&quot;,\&quot;creditorAgent\&quot;: \&quot;004\&quot;,\&quot;creditorAgentBic\&quot;: \&quot;\&quot;,\&quot;creditorAcctId\&quot;: \&quot;0878946223\&quot;,\&quot;creditorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;remittanceInfo\&quot;: \&quot;0\&quot;},\&quot;originalFpsReferenceNo\&quot;:\&quot;FRN202001161nCF90y2v\&quot;,\&quot;transactionId\&quot;:\&quot;FRNRF2${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;FRNRF2${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;businessService\&quot;:\&quot;PAYR01\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg/v1/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId1" enabled="true">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">00000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed">4545435353</stringProp>
            <stringProp name="variableName">clientReqId1</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId2" enabled="true">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">00000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed">66463331897</stringProp>
            <stringProp name="variableName">clientReqId2</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 9c - Inward Refund Return" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;RF${datetime}${clientReqId1}${clientReqId2}&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYR01&quot;,&#xd;
   &quot;msgType&quot;: &quot;RETURN_REFUND&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;categoryPurpose\&quot;: \&quot;RPRFND\&quot;,\&quot;settlementAmt\&quot;: 0.01,\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;2020-01-16\&quot;, \&quot;instructedAmt\&quot;: 0.01,\&quot;instructedCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAmt\&quot;: 0,\&quot;chargeCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAgent\&quot;: \&quot;\&quot;,\&quot;returnReason\&quot;:\&quot;REFUND_REQUEST_BY_END_CUSTOMER\&quot;, \&quot;returnReasonInfo1\&quot;:\&quot;\&quot;, \&quot;returnReasonInfo2\&quot;:\&quot;\&quot;, \&quot;originalTransactionReference\&quot;:{\&quot;instructionId\&quot;:\&quot;\&quot;,\&quot;endToEndId\&quot;:\&quot;NOTPROVIDED\&quot;,\&quot;categoryPurpose\&quot;: \&quot;CXGOVT\&quot;,\&quot;settlementAmt\&quot;: 10000.00,\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;2020-01-16\&quot;,\&quot;debtorName\&quot;: \&quot;Generic Kindergarten\&quot;,\&quot;isDebtorCorporate\&quot;: null,\&quot;debtorCustId\&quot;: null,\&quot;debtorBic\&quot;: \&quot;\&quot;,\&quot;debtorContactMobile\&quot;: \&quot;\&quot;,\&quot;debtorContactEmail\&quot;: \&quot;\&quot;,\&quot;debtorAgent\&quot;: \&quot;389\&quot;,\&quot;debtorAgentBic\&quot;: \&quot;\&quot;,\&quot;debtorAcctId\&quot;: \&quot;654791321987\&quot;,\&quot;debtorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;creditorName\&quot;: \&quot;Johnston\&quot;,\&quot;isCreditorCorporate\&quot;: \&quot;false\&quot;,\&quot;creditorCustId\&quot;: \&quot;1111111\&quot;,\&quot;creditorBic\&quot;: \&quot;\&quot;,\&quot;creditorContactMobile\&quot;: \&quot;\&quot;,\&quot;creditorContactEmail\&quot;: \&quot;\&quot;,\&quot;creditorAgent\&quot;: \&quot;004\&quot;,\&quot;creditorAgentBic\&quot;: \&quot;\&quot;,\&quot;creditorAcctId\&quot;: \&quot;0878946223\&quot;,\&quot;creditorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;remittanceInfo\&quot;: \&quot;0\&quot;},\&quot;originalFpsReferenceNo\&quot;:\&quot;FRN202001161nCF90y2v\&quot;,\&quot;transactionId\&quot;:\&quot;FRNRF2${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;FRNRF3${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;businessService\&quot;:\&quot;PAYR01\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId1" enabled="true">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">00000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed">454543123126</stringProp>
            <stringProp name="variableName">clientReqId1</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId2" enabled="true">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">00000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed">6998731897</stringProp>
            <stringProp name="variableName">clientReqId2</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 9d - Inward Refund Return" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;RF${datetime}${clientReqId1}${clientReqId2}&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYR01&quot;,&#xd;
   &quot;msgType&quot;: &quot;RETURN_REFUND&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;categoryPurpose\&quot;: \&quot;RPRFND\&quot;,\&quot;settlementAmt\&quot;: 0.01,\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;2020-01-16\&quot;, \&quot;instructedAmt\&quot;: 0.01,\&quot;instructedCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAmt\&quot;: 0,\&quot;chargeCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAgent\&quot;: \&quot;\&quot;,\&quot;returnReason\&quot;:\&quot;REFUND_REQUEST_BY_END_CUSTOMER\&quot;, \&quot;returnReasonInfo1\&quot;:\&quot;\&quot;, \&quot;returnReasonInfo2\&quot;:\&quot;\&quot;, \&quot;originalTransactionReference\&quot;:{\&quot;instructionId\&quot;:\&quot;\&quot;,\&quot;endToEndId\&quot;:\&quot;NOTPROVIDED\&quot;,\&quot;categoryPurpose\&quot;: \&quot;CXGOVT\&quot;,\&quot;settlementAmt\&quot;: 10000.00,\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;2020-01-16\&quot;,\&quot;debtorName\&quot;: \&quot;Generic Kindergarten\&quot;,\&quot;isDebtorCorporate\&quot;: null,\&quot;debtorCustId\&quot;: null,\&quot;debtorBic\&quot;: \&quot;\&quot;,\&quot;debtorContactMobile\&quot;: \&quot;\&quot;,\&quot;debtorContactEmail\&quot;: \&quot;\&quot;,\&quot;debtorAgent\&quot;: \&quot;389\&quot;,\&quot;debtorAgentBic\&quot;: \&quot;\&quot;,\&quot;debtorAcctId\&quot;: \&quot;654791321987\&quot;,\&quot;debtorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;creditorName\&quot;: \&quot;Johnston\&quot;,\&quot;isCreditorCorporate\&quot;: \&quot;false\&quot;,\&quot;creditorCustId\&quot;: \&quot;1111111\&quot;,\&quot;creditorBic\&quot;: \&quot;\&quot;,\&quot;creditorContactMobile\&quot;: \&quot;\&quot;,\&quot;creditorContactEmail\&quot;: \&quot;\&quot;,\&quot;creditorAgent\&quot;: \&quot;004\&quot;,\&quot;creditorAgentBic\&quot;: \&quot;\&quot;,\&quot;creditorAcctId\&quot;: \&quot;0878946223\&quot;,\&quot;creditorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;remittanceInfo\&quot;: \&quot;0\&quot;},\&quot;originalFpsReferenceNo\&quot;:\&quot;FRN202001161nCF90y2v\&quot;,\&quot;transactionId\&quot;:\&quot;FRNRF2${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;FRNRF4${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;businessService\&quot;:\&quot;PAYR01\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId1" enabled="true">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">00000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed">45459987</stringProp>
            <stringProp name="variableName">clientReqId1</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId2" enabled="true">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">00000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed">19197573</stringProp>
            <stringProp name="variableName">clientReqId2</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 9e - Inward Refund Return" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;RF${datetime}${clientReqId1}${clientReqId2}&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYR01&quot;,&#xd;
   &quot;msgType&quot;: &quot;RETURN_REFUND&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;categoryPurpose\&quot;: \&quot;RPRTRN\&quot;,\&quot;settlementAmt\&quot;: 1.00,\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;2020-01-16\&quot;, \&quot;instructedAmt\&quot;: 1.00,\&quot;instructedCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAmt\&quot;: 0,\&quot;chargeCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAgent\&quot;: \&quot;\&quot;,\&quot;returnReason\&quot;:\&quot;REFUND_REQUEST_BY_END_CUSTOMER\&quot;, \&quot;returnReasonInfo1\&quot;:\&quot;\&quot;, \&quot;returnReasonInfo2\&quot;:\&quot;\&quot;, \&quot;originalTransactionReference\&quot;:{\&quot;instructionId\&quot;:\&quot;\&quot;,\&quot;endToEndId\&quot;:\&quot;NOTPROVIDED\&quot;,\&quot;categoryPurpose\&quot;: \&quot;CXSALA\&quot;,\&quot;settlementAmt\&quot;: 10000.00,\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;2020-12-10\&quot;,\&quot;debtorName\&quot;: \&quot;Ho Mai Li\&quot;,\&quot;isDebtorCorporate\&quot;: null,\&quot;debtorCustId\&quot;: null,\&quot;debtorBic\&quot;: \&quot;\&quot;,\&quot;debtorContactMobile\&quot;: \&quot;\&quot;,\&quot;debtorContactEmail\&quot;: \&quot;\&quot;,\&quot;debtorAgent\&quot;: \&quot;000\&quot;,\&quot;debtorAgentBic\&quot;: \&quot;\&quot;,\&quot;debtorAcctId\&quot;: \&quot;0878946223\&quot;,\&quot;debtorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;creditorName\&quot;: \&quot;Generic Kindergarten\&quot;,\&quot;isCreditorCorporate\&quot;: \&quot;false\&quot;,\&quot;creditorCustId\&quot;: \&quot;654791321987\&quot;,\&quot;creditorBic\&quot;: \&quot;\&quot;,\&quot;creditorContactMobile\&quot;: \&quot;\&quot;,\&quot;creditorContactEmail\&quot;: \&quot;\&quot;,\&quot;creditorAgent\&quot;: \&quot;025\&quot;,\&quot;creditorAgentBic\&quot;: \&quot;\&quot;,\&quot;creditorAcctId\&quot;: \&quot;654791321987\&quot;,\&quot;creditorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;remittanceInfo\&quot;: \&quot;\&quot;},\&quot;originalFpsReferenceNo\&quot;:\&quot;FRN202001161nCF90y2v\&quot;,\&quot;transactionId\&quot;:\&quot;FRNRF2${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;FRNRF4${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;businessService\&quot;:\&quot;PAYR01\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId1" enabled="true">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">00000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed">45459987</stringProp>
            <stringProp name="variableName">clientReqId1</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId2" enabled="true">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">00000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed">19197573</stringProp>
            <stringProp name="variableName">clientReqId2</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 10 - Inward Direct Debit (Batch)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;DD${date}${clientReqId}&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYD03&quot;,&#xd;
   &quot;msgType&quot;: &quot;DIRECT_DRBIT&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;categoryPurpose\&quot;: \&quot;DDBILL\&quot;,\&quot;settlementAmt\&quot;: 1000.05,\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;${ISOdate}\&quot;, \&quot;instructedAmt\&quot;: 1000.05,\&quot;instructedCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAmt\&quot;: 0,\&quot;chargeCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAgent\&quot;: \&quot;\&quot;,\&quot;chargeAgentBic\&quot;: \&quot;\&quot;,\&quot;creditorName\&quot;: \&quot;Digital Life\&quot;,\&quot;isCreditorCorporate\&quot;: false,\&quot;creditorCustId\&quot;: \&quot;OUT123456\&quot;,\&quot;creditorBic\&quot;: \&quot;\&quot;,\&quot;creditorContactMobile\&quot;: \&quot;\&quot;,\&quot;creditorContactEmail\&quot;: \&quot;\&quot;,\&quot;creditorAgent\&quot;: \&quot;001\&quot;,\&quot;creditorAgentBic\&quot;: \&quot;\&quot;,\&quot;creditorAcctId\&quot;: \&quot;654791321987\&quot;,\&quot;creditorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;debtorName\&quot;: \&quot;Ho Mai Li\&quot;,\&quot;isDebtorCorporate\&quot;: \&quot;false\&quot;,\&quot;debtorCustId\&quot;: \&quot;88812345671\&quot;,\&quot;debtorBic\&quot;: \&quot;\&quot;,\&quot;debtorContactMobile\&quot;: \&quot;\&quot;,\&quot;debtorContactEmail\&quot;: \&quot;\&quot;,\&quot;debtorAgent\&quot;: \&quot;389\&quot;,\&quot;debtorAgentBic\&quot;: \&quot;\&quot;,\&quot;debtorAcctId\&quot;: \&quot;0878946223\&quot;,\&quot;debtorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;purpose\&quot;: \&quot;ALLW\&quot;,\&quot;purposeInfo\&quot;: \&quot;\&quot;,\&quot;remittanceInfo\&quot;: \&quot;Whatever\&quot;, \&quot;mandateId\&quot;: \&quot;001/MNDT2018053115042895301000002\&quot;,\&quot;transactionId\&quot;:\&quot;DD${date}${clientReqId}\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;FRN${date}${clientReqId}\&quot;,\&quot;instructionId\&quot;:\&quot;\&quot;,\&quot;endToEndId\&quot;:\&quot;843854353414\&quot;,\&quot;businessService\&quot;:\&quot;PAYD03\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 10a - Inward Direct Debit (Batch)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;FPS&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;FRN2019052300004235224&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;FPS&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYD03&quot;,&#xd;
   &quot;msgType&quot;: &quot;DIRECT_DRBIT&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;transactionId\&quot;:\&quot;8CBB1F7165AA11E9A06B525400DE0484\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;FRN2019052300004235224\&quot;,\&quot;instructionId\&quot;:null,\&quot;endToEndId\&quot;:\&quot;1804199802\&quot;,\&quot;categoryPurpose\&quot;:\&quot;DDOTHR\&quot;,\&quot;settlementAmt\&quot;:100.00,\&quot;settlementCurrency\&quot;:\&quot;HKD\&quot;,\&quot;settlementDate\&quot;:\&quot;2019-05-23\&quot;,\&quot;instructedAmt\&quot;:null,\&quot;instructedCurrency\&quot;:null,\&quot;chargeAmt\&quot;:null,\&quot;chargeCurrency\&quot;:null,\&quot;chargeAgent\&quot;:null,\&quot;chargeAgentBic\&quot;:null,\&quot;mandateId\&quot;:\&quot;949/MNDT0001\&quot;,\&quot;debtorName\&quot;:\&quot;Ho Mai Li\&quot;,\&quot;isDebtorCorporate\&quot;:null,\&quot;debtorCustId\&quot;:null,\&quot;debtorBic\&quot;:null,\&quot;debtorContactMobile\&quot;:null,\&quot;debtorContactEmail\&quot;:null,\&quot;debtorAgent\&quot;:\&quot;000\&quot;,\&quot;debtorAgentBic\&quot;:null,\&quot;debtorAcctId\&quot;:\&quot;0878946223\&quot;,\&quot;debtorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;creditorName\&quot;:\&quot;ABC LIMITED\&quot;,\&quot;isCreditorCorporate\&quot;:null,\&quot;creditorCustId\&quot;:null,\&quot;creditorBic\&quot;:null,\&quot;creditorContactMobile\&quot;:null,\&quot;creditorContactEmail\&quot;:null,\&quot;creditorAgent\&quot;:\&quot;949\&quot;,\&quot;creditorAgentBic\&quot;:null,\&quot;creditorAcctId\&quot;:\&quot;001123456001\&quot;,\&quot;creditorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;purpose\&quot;:null,\&quot;purposeInfo\&quot;:null,\&quot;remittanceInfo\&quot;:null,\&quot;businessService\&quot;:\&quot;PAYD03\&quot;}&quot;&#xd;
&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg/v1/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 11a - Outward Direct Debit (PAYD01)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;businessService&quot;: &quot;PAYD01&quot;,&#xd;
   &quot;categoryPurpose&quot;: &quot;DDOTHR&quot;,&#xd;
   &quot;charge&quot;: 0,&#xd;
   &quot;chargeReference&quot;: &quot;&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;DD${date}1${clientReqId}&quot;,&#xd;
   &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;creditorAcctId&quot;: &quot;005009213555&quot;,&#xd;
   &quot;creditorBic&quot;: &quot;&quot;,&#xd;
   &quot;creditorContactEmail&quot;: &quot;&quot;,&#xd;
   &quot;creditorContactMobile&quot;: &quot;&quot;,&#xd;
   &quot;creditorName&quot;: &quot;Generic Technology Company&quot;,&#xd;
   &quot;debtorAcctId&quot;: &quot;9123130113&quot;,&#xd;
   &quot;debtorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
   &quot;debtorAgent&quot;: &quot;020&quot;,&#xd;
   &quot;debtorCorporate&quot;: &quot;&quot;,&#xd;
   &quot;debtorCustId&quot;: &quot;CUST-0001&quot;,&#xd;
   &quot;debtorBic&quot;: &quot;&quot;,&#xd;
   &quot;debtorContactEmail&quot;: &quot;&quot;,&#xd;
   &quot;debtorContactMobile&quot;: &quot;&quot;,&#xd;
   &quot;debtorName&quot;: &quot;DEBTOR ACCOUNT NAME&quot;,&#xd;
   &quot;endToEndId&quot;: &quot;20200504143744212&quot;,&#xd;
   &quot;instructionId&quot;: &quot;&quot;,&#xd;
   &quot;mandateId&quot;: &quot;000/ACD2201071417000002&quot;,&#xd;
   &quot;options&quot;: {&quot;SKIP_PROXY_RESOLUTION&quot;: false, &quot;SKIP_CREDIT&quot;:false},&#xd;
   &quot;purpose&quot;: &quot;PAYM&quot;,&#xd;
   &quot;purposeInfo&quot;: &quot;&quot;,&#xd;
   &quot;remittanceInfo&quot;: &quot;Generated Settlement&quot;,&#xd;
   &quot;settlementAmt&quot;: 1,&#xd;
   &quot;settlementCurrency&quot;: &quot;HKD&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/directDebit?async=false</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 11a1 - Outward Direct Debit (PAYD01) (Do NOT skip_credit)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;businessService&quot;: &quot;PAYD01&quot;,&#xd;
   &quot;categoryPurpose&quot;: &quot;DDBILL&quot;,&#xd;
   &quot;charge&quot;: 0,&#xd;
   &quot;chargeReference&quot;: &quot;&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;DD${date}2${clientReqId}&quot;,&#xd;
   &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;creditorAcctId&quot;: &quot;654791321987&quot;,&#xd;
   &quot;creditorBic&quot;: &quot;&quot;,&#xd;
   &quot;creditorContactEmail&quot;: &quot;&quot;,&#xd;
   &quot;creditorContactMobile&quot;: &quot;&quot;,&#xd;
   &quot;creditorName&quot;: &quot;Generic Kindergarten&quot;,&#xd;
   &quot;debtorAcctId&quot;: &quot;0878946223&quot;,&#xd;
   &quot;debtorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
   &quot;debtorAgent&quot;: &quot;389&quot;,&#xd;
   &quot;debtorCorporate&quot;: &quot;false&quot;,&#xd;
   &quot;debtorCustId&quot;: &quot;CUST-0001&quot;,&#xd;
   &quot;debtorBic&quot;: &quot;&quot;,&#xd;
   &quot;debtorContactEmail&quot;: &quot;&quot;,&#xd;
   &quot;debtorContactMobile&quot;: &quot;&quot;,&#xd;
   &quot;debtorName&quot;: &quot;Ho Man Li&quot;,&#xd;
   &quot;endToEndId&quot;: &quot;CROPS/123/000000054878&quot;,&#xd;
   &quot;instructionId&quot;: &quot;CROPS/123/000000054878&quot;,&#xd;
   &quot;mandateId&quot;: &quot;005/MD608370&quot;,&#xd;
   &quot;options&quot;: {&quot;SKIP_PROXY_RESOLUTION&quot;: true},&#xd;
   &quot;balanceReference&quot;: &quot;br${date}${clientReqId}&quot;,&#xd;
   &quot;purpose&quot;: &quot;PAYM&quot;,&#xd;
   &quot;purposeInfo&quot;: &quot;&quot;,&#xd;
   &quot;remittanceInfo&quot;: &quot;&quot;,&#xd;
   &quot;settlementAmt&quot;: ${settlementAmt},&#xd;
   &quot;settlementCurrency&quot;: &quot;HKD&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/directDebit?async=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 11b - Outward Direct Debit (PAYD03)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;businessService&quot;: &quot;PAYD03&quot;,&#xd;
   &quot;categoryPurpose&quot;: &quot;DDBILL&quot;,&#xd;
   &quot;charge&quot;: 0,&#xd;
   &quot;chargeReference&quot;: &quot;&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;DD${date}3${clientReqId}&quot;,&#xd;
   &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;creditorAcctId&quot;: &quot;654791321987&quot;,&#xd;
   &quot;creditorBic&quot;: &quot;&quot;,&#xd;
   &quot;creditorContactEmail&quot;: &quot;&quot;,&#xd;
   &quot;creditorContactMobile&quot;: &quot;&quot;,&#xd;
   &quot;creditorName&quot;: &quot;Generic Kindergarten&quot;,&#xd;
   &quot;debtorAcctId&quot;: &quot;0878946223&quot;,&#xd;
   &quot;debtorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
   &quot;debtorAgent&quot;: &quot;020&quot;,&#xd;
   &quot;debtorCorporate&quot;: &quot;false&quot;,&#xd;
   &quot;debtorCustId&quot;: &quot;CUST-0001&quot;,&#xd;
   &quot;debtorBic&quot;: &quot;&quot;,&#xd;
   &quot;debtorContactEmail&quot;: &quot;&quot;,&#xd;
   &quot;debtorContactMobile&quot;: &quot;&quot;,&#xd;
   &quot;debtorName&quot;: &quot;Ho Man Li&quot;,&#xd;
   &quot;endToEndId&quot;: &quot;CROPS/123/000000054878&quot;,&#xd;
   &quot;instructionId&quot;: &quot;CROPS/123/000000054878&quot;,&#xd;
   &quot;mandateId&quot;: &quot;005/MD608370&quot;,&#xd;
   &quot;options&quot;: {&quot;SKIP_PROXY_RESOLUTION&quot;: true, &quot;SKIP_CREDIT&quot;:true},&#xd;
   &quot;balanceReference&quot;: &quot;br${date}${clientReqId}&quot;,&#xd;
   &quot;purpose&quot;: &quot;PAYM&quot;,&#xd;
   &quot;purposeInfo&quot;: &quot;&quot;,&#xd;
   &quot;remittanceInfo&quot;: &quot;&quot;,&#xd;
   &quot;settlementAmt&quot;: ${settlementAmt},&#xd;
   &quot;settlementCurrency&quot;: &quot;HKD&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/directDebit?async=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 58 - update Bank reference" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;bankReference&quot;:&quot;142&quot;,&#xd;
	&quot;criteria&quot;:{&quot;bankReference&quot;:&quot;141&quot;,&quot;debtorAcctId&quot;:&quot;0878946223&quot;}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/edda/v1/updateBankReference</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 12 - Outward EDDA Initiation (Creditor)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientReqId&quot;: &quot;EI000${datetime}${clientReqId}&quot;,&#xd;
  &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;ALPHA&quot;,&#xd;
  &quot;creditorAcctId&quot;: &quot;0878946223&quot;,&#xd;
  &quot;creditorName&quot;: &quot;Ho Man Li 1&quot;,&#xd;
  &quot;debtorName&quot;: &quot;Ho Man L 3i&quot;,&#xd;
  &quot;debtorCorporate&quot;: false,&#xd;
  &quot;debtorCustId&quot;: &quot;CUST0001&quot;,&#xd;
  &quot;debtorIds&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: &quot;123321654&quot;,&#xd;
      &quot;idType&quot;: &quot;PASSPORT_NUMBER&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;debtorAcctId&quot;: &quot;0878946004&quot;,&#xd;
  &quot;debtorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
  &quot;debtorAgent&quot;: &quot;000&quot;,&#xd;
  &quot;mandateId&quot;: &quot;000/${datetime}x${clientReqId}&quot;,&#xd;
  &quot;maxAmt&quot;: 10000,&#xd;
  &quot;maxAmtCcy&quot;: &quot;HKD&quot;,&#xd;
  &quot;occurrences&quot;: {&#xd;
    &quot;duration&quot;: {&#xd;
      &quot;fromDate&quot;: &quot;${ISOdate}&quot;,&#xd;
      &quot;toDate&quot;: &quot;2022-12-31&quot;&#xd;
    },&#xd;
    &quot;frequency&quot;: {&#xd;
      &quot;countPerPeriod&quot;: 0,&#xd;
      &quot;periodType&quot;: &quot;ADHOC&quot;&#xd;
    },&#xd;
    &quot;recurrent&quot;: true&#xd;
  },&#xd;
  &quot;reason&quot;: &quot;NEW_EDDA&quot;,&#xd;
  &quot;trackingIndicator&quot;: false,&#xd;
  &quot;mandateType&quot;: &quot;UNCONFIRMED_ELECTRONIC_MANDATE&quot;,&#xd;
  &quot;ultimateDebtorName&quot;: &quot;HOHHOHO&quot;,&#xd;
  &quot;creditorReference&quot;: &quot;EDDA${datetime}${clientReqId}&quot;,&#xd;
  &quot;options&quot;: {&quot;SKIP_ACCT_VALIDATION&quot;:true,&quot;BANK_REF&quot;:&quot;BankReference1234&quot;}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/edda/v1/creditorEddaInitiation?async=false</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 12b - Outward EDDA Initiation (Creditor) (null creditorReference)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientReqId&quot;: &quot;EI000${datetime}${clientReqId}&quot;,&#xd;
  &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;ALPHA&quot;,&#xd;
  &quot;creditorAcctId&quot;: &quot;0878946223&quot;,&#xd;
  &quot;creditorName&quot;: &quot;Ho Man Li&quot;,&#xd;
  &quot;debtorName&quot;: &quot;Ho Man Li&quot;,&#xd;
  &quot;debtorCorporate&quot;: false,&#xd;
  &quot;debtorCustId&quot;: &quot;CUST0001&quot;,&#xd;
  &quot;debtorIds&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: &quot;123321654&quot;,&#xd;
      &quot;idType&quot;: &quot;PASSPORT_NUMBER&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;debtorAcctId&quot;: &quot;0878946223&quot;,&#xd;
  &quot;debtorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
  &quot;debtorAgent&quot;: &quot;003&quot;,&#xd;
  &quot;mandateId&quot;: &quot;000/${datetime}${clientReqId}&quot;,&#xd;
  &quot;maxAmt&quot;: 10000,&#xd;
  &quot;maxAmtCcy&quot;: &quot;HKD&quot;,&#xd;
  &quot;occurrences&quot;: {&#xd;
    &quot;duration&quot;: {&#xd;
      &quot;fromDate&quot;: &quot;${ISOdate}&quot;,&#xd;
      &quot;toDate&quot;: &quot;2022-12-31&quot;&#xd;
    },&#xd;
    &quot;frequency&quot;: {&#xd;
      &quot;countPerPeriod&quot;: 0,&#xd;
      &quot;periodType&quot;: &quot;ADHOC&quot;&#xd;
    },&#xd;
    &quot;recurrent&quot;: true&#xd;
  },&#xd;
  &quot;reason&quot;: &quot;NEW_EDDA&quot;,&#xd;
  &quot;trackingIndicator&quot;: false,&#xd;
  &quot;mandateType&quot;: &quot;UNCONFIRMED_ELECTRONIC_MANDATE&quot;,&#xd;
  &quot;ultimateDebtorName&quot;: &quot;HOHOHOHOHO&quot;,&#xd;
  &quot;creditorReference&quot;: null,&#xd;
  &quot;options&quot;: {&quot;SKIP_ACCT_VALIDATION&quot;:true}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/edda/v1/creditorEddaInitiation?async=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 12c - Outward EDDA Initiation (Creditor)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientReqId&quot;: &quot;EI000${datetime}${clientReqId}&quot;,&#xd;
  &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;ALPHA&quot;,&#xd;
  &quot;creditorAcctId&quot;: &quot;0878946223&quot;,&#xd;
  &quot;creditorName&quot;: &quot;Ho Man Li&quot;,&#xd;
  &quot;debtorName&quot;: &quot;Ho Man Li&quot;,&#xd;
  &quot;debtorCorporate&quot;: false,&#xd;
  &quot;debtorCustId&quot;: &quot;CUST0001&quot;,&#xd;
  &quot;debtorIds&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: &quot;123321654&quot;,&#xd;
      &quot;idType&quot;: &quot;PASSPORT_NUMBER&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;debtorAcctId&quot;: &quot;0878946224&quot;,&#xd;
  &quot;debtorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
  &quot;debtorAgent&quot;: &quot;000&quot;,&#xd;
  &quot;mandateId&quot;: &quot;000/${datetime}${clientReqId}&quot;,&#xd;
  &quot;maxAmt&quot;: 10000,&#xd;
  &quot;maxAmtCcy&quot;: &quot;HKD&quot;,&#xd;
  &quot;occurrences&quot;: {&#xd;
    &quot;duration&quot;: {&#xd;
      &quot;fromDate&quot;: &quot;${ISOdate}&quot;,&#xd;
      &quot;toDate&quot;: &quot;2022-12-31&quot;&#xd;
    },&#xd;
    &quot;frequency&quot;: {&#xd;
      &quot;countPerPeriod&quot;: 0,&#xd;
      &quot;periodType&quot;: &quot;ADHOC&quot;&#xd;
    },&#xd;
    &quot;recurrent&quot;: true&#xd;
  },&#xd;
  &quot;reason&quot;: &quot;NEW_EDDA&quot;,&#xd;
  &quot;trackingIndicator&quot;: false,&#xd;
  &quot;mandateType&quot;: &quot;UNCONFIRMED_ELECTRONIC_MANDATE&quot;,&#xd;
  &quot;ultimateDebtorName&quot;: &quot;HOHOHOHOHO&quot;,&#xd;
  &quot;creditorReference&quot;: &quot;EDDA${datetime}${clientReqId}&quot;,&#xd;
  &quot;options&quot;: {&quot;SKIP_ACCT_VALIDATION&quot;:true}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/edda/v1/creditorEddaInitiation?async=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 12d - Outward EDDA Initiation (Debtor)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientReqId&quot;: &quot;EI000${datetime}${clientReqId}&quot;,&#xd;
  &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;ALPHA&quot;,&#xd;
  &quot;creditorAcctId&quot;: &quot;2497964&quot;,&#xd;
  &quot;creditorAcctIdType&quot;:&quot;SVID&quot;,&#xd;
  &quot;creditorName&quot;: &quot;900 Company Limited&quot;,&#xd;
  &quot;debtorName&quot;: &quot;Ho Man L 3i&quot;,&#xd;
  &quot;creditorCorporate&quot;: true,&#xd;
  &quot;creditorCustId&quot;: &quot;C900900900900\\\\0742&quot;,&#xd;
&#xd;
  &quot;debtorAcctId&quot;: &quot;0878946004&quot;,&#xd;
  &quot;creditorAgent&quot;: &quot;000&quot;,&#xd;
  &quot;mandateId&quot;: &quot;000/${datetime}x${clientReqId}&quot;,&#xd;
  &quot;maxAmt&quot;: 10000,&#xd;
  &quot;maxAmtCcy&quot;: &quot;HKD&quot;,&#xd;
  &quot;occurrences&quot;: {&#xd;
    &quot;duration&quot;: {&#xd;
      &quot;fromDate&quot;: &quot;${ISOdate}&quot;,&#xd;
      &quot;toDate&quot;: &quot;2022-12-31&quot;&#xd;
    },&#xd;
    &quot;frequency&quot;: {&#xd;
      &quot;countPerPeriod&quot;: 0,&#xd;
      &quot;periodType&quot;: &quot;ADHOC&quot;&#xd;
    },&#xd;
    &quot;recurrent&quot;: true&#xd;
  },&#xd;
  &quot;reason&quot;: &quot;NEW_EDDA&quot;,&#xd;
  &quot;trackingIndicator&quot;: false,&#xd;
  &quot;mandateType&quot;: &quot;UNCONFIRMED_ELECTRONIC_MANDATE&quot;,&#xd;
  &quot;ultimateDebtorName&quot;: &quot;HOHHOHO&quot;,&#xd;
  &quot;creditorReference&quot;: &quot;EDDA${datetime}${clientReqId}&quot;,&#xd;
  &quot;options&quot;: {&quot;SKIP_ACCT_VALIDATION&quot;:true,&quot;BANK_REF&quot;:&quot;BankReference1234&quot;}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/edda/v1/debtorEddaInitiation?async=false</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 13 - Update Adverse Weather Status" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;adverseWeatherDate&quot;: &quot;${ISOdate}&quot;	,&#xd;
	&quot;status&quot;: &quot;C&quot;,&#xd;
	&quot;clientUsrId&quot;: &quot;ALPHA&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/admin/v1/updateAdverseWeatherHist?async=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 15 - Addressing Enquiry" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientReqId&quot;: &quot;AE000${__time(yyyyMMddhhmmssSSS,date)}123456789&quot;,&#xd;
  &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
  &quot;proxyIdType&quot;: &quot;SVID&quot;,&#xd;
  &quot;proxyId&quot;: &quot;1646041&quot;,&#xd;
  &quot;purpose&quot;: &quot;PAYM&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/addressing/v1/proxyIdEnquiry</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 15.5 - Addressing Enquiry with merchantinfo" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientReqId&quot;: &quot;AE000${datetime}123321111&quot;,&#xd;
  &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
  &quot;proxyIdType&quot;: &quot;SVID&quot;,&#xd;
  &quot;proxyId&quot;: &quot;166651331&quot;,&#xd;
  &quot;purpose&quot;: &quot;PAYM&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/addressing/v1/proxyIdEnquiryWithMerchantInfo?returnFpsMerchantInfo=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 16 - listPayment" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;criteria&quot;: {&#xd;
       &quot;clientSysId&quot;:&quot;autocredit&quot;,&#xd;
       &quot;settlementDateStart&quot;:&quot;2022-03-02&quot;,&#xd;
       &quot;settlementDateEnd&quot;:&quot;2022-03-02&quot;,&#xd;
       &quot;businessServices&quot;:[&quot;PAYC03&quot;],&#xd;
       &quot;transactionStatuses&quot;:[&quot;ACSC&quot;,&quot;CNCL&quot;,&quot;RJCT&quot;]&#xd;
   },&#xd;
   &quot;offset&quot;:0,&#xd;
   &quot;size&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/listPayment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 17 - Addressing List proxy records" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;size&quot;: 9, &quot;offset&quot;: 0, &quot;criteria&quot;:{}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">addressing/v2/listProxyRecordFull</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 17 - Addressing List proxy records" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;size&quot;: 9, &quot;offset&quot;: 0, &quot;criteria&quot;:{}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">addressing/v1/listProxyRecordFull</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 27 - listProxyRecordFull" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;criteria&quot;: {&#xd;
		&quot;enableWildCard&quot;: true,&#xd;
		&quot;proxyId&quot;:&quot;1234566&quot;,&#xd;
		&quot;proxyIdType&quot;:&quot;SVID&quot;&#xd;
	},&#xd;
	&quot;offset&quot;: 0,&#xd;
	&quot;size&quot;: 10	&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/addressing/v1/listProxyRecordFull</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 18 - Inward Direct Debit (Realtime)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;DD${date}${clientReqId}&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYD01&quot;,&#xd;
   &quot;msgType&quot;: &quot;DIRECT_DRBIT&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;categoryPurpose\&quot;: \&quot;DDOTHS\&quot;,\&quot;settlementAmt\&quot;: 1000.00,\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;${ISOdate}\&quot;, \&quot;instructedAmt\&quot;: 1000.00,\&quot;instructedCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAmt\&quot;: 0,\&quot;chargeCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAgent\&quot;: \&quot;\&quot;,\&quot;chargeAgentBic\&quot;: \&quot;\&quot;,\&quot;creditorName\&quot;: \&quot;Digital Life\&quot;,\&quot;isCreditorCorporate\&quot;: false,\&quot;creditorCustId\&quot;: \&quot;OUT123456\&quot;,\&quot;creditorBic\&quot;: \&quot;\&quot;,\&quot;creditorContactMobile\&quot;: \&quot;\&quot;,\&quot;creditorContactEmail\&quot;: \&quot;\&quot;,\&quot;creditorAgent\&quot;: \&quot;001\&quot;,\&quot;creditorAgentBic\&quot;: \&quot;\&quot;,\&quot;creditorAcctId\&quot;: \&quot;654791321987\&quot;,\&quot;creditorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;debtorName\&quot;: \&quot;Ho Mai Li\&quot;,\&quot;isDebtorCorporate\&quot;: \&quot;false\&quot;,\&quot;debtorCustId\&quot;: \&quot;88812345671\&quot;,\&quot;debtorBic\&quot;: \&quot;\&quot;,\&quot;debtorContactMobile\&quot;: \&quot;\&quot;,\&quot;debtorContactEmail\&quot;: \&quot;\&quot;,\&quot;debtorAgent\&quot;: \&quot;389\&quot;,\&quot;debtorAgentBic\&quot;: \&quot;\&quot;,\&quot;debtorAcctId\&quot;: \&quot;0878946223\&quot;,\&quot;debtorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;purpose\&quot;: \&quot;ALLW\&quot;,\&quot;purposeInfo\&quot;: \&quot;\&quot;,\&quot;remittanceInfo\&quot;: \&quot;Whatever\&quot;, \&quot;mandateId\&quot;: \&quot;001/MNDT2018053115042895301000002\&quot;,\&quot;transactionId\&quot;:\&quot;DD${date}${clientReqId}\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;FRN${date}${clientReqId}\&quot;,\&quot;instructionId\&quot;:\&quot;\&quot;,\&quot;endToEndId\&quot;:\&quot;843854353414\&quot;,\&quot;businessService\&quot;:\&quot;PAYD01\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 33 - Charge listChargeRules" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;criteria&quot;: {&#xd;
    &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
    &quot;currency&quot;: &quot;HKD&quot;,&#xd;
    &quot;custom1&quot;: &quot;BR20201528       000&quot;&#xd;
  },&#xd;
  &quot;index&quot;: 0,&#xd;
  &quot;size&quot;: 0&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/charge/v1/listChargeRule</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 34b - Outward EDDA Suspension (Specified mandate ID)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientReqId&quot;: &quot;ES000${datetime}${clientReqId}&quot;,&#xd;
  &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;ALPHA&quot;,&#xd;
  &quot;mandateId&quot;: &quot;/025/MNDT202112130031230038/52&quot;,&#xd;
  &quot;reason&quot;: &quot;MANDATE_SUSPENDED&quot;,&#xd;
  &quot;additionalReasonInfo&quot;:&quot;&quot;,&#xd;
  &quot;fromCreditor&quot;: false,&#xd;
  &quot;options&quot;: {}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/edda/v1/eddaSuspension?async=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 34c - Outward EDDA Suspension with End Date" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientReqId&quot;: &quot;ES000${datetime}${clientReqId}&quot;,&#xd;
  &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;ALPHA&quot;,&#xd;
  &quot;mandateId&quot;: &quot;000/202107150157226700831092561&quot;,&#xd;
  &quot;reason&quot;: &quot;MANDATE_SUSPENDED&quot;,&#xd;
  &quot;additionalReasonInfo&quot;:&quot;/ENDDAT/2022-12-01&quot;,&#xd;
  &quot;fromCreditor&quot;: true,&#xd;
  &quot;options&quot;: {}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">${PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/edda/v1/eddaSuspension?async=false</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 35a - Charge calculateCharge Creditor" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
  &quot;categoryPurpose&quot;: &quot;CXSALA&quot;,&#xd;
  &quot;creditorCustId&quot;:&quot;11111&quot;,&#xd;
  &quot;settlementAmt&quot;: 12.49,&#xd;
  &quot;settlementCurrency&quot;: &quot;HKD&quot;,&#xd;
  &quot;additionalData&quot;:{&#xd;
    &quot;merchantCategory&quot;: &quot;AGRI&quot;,&#xd;
    &quot;merchantType&quot;: &quot;0742&quot;,&#xd;
    &quot;merchantCustId&quot;: &quot;11111&quot;&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/charge/v1/calculateCharge/creditor</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 35b - Charge calculateCharge Debtor" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
  &quot;categoryPurpose&quot;: &quot;CXMRCH&quot;,&#xd;
  &quot;creationDatetime&quot;: &quot;2021-01-26T08:57:20.935Z&quot;,&#xd;
  &quot;creditorCustId&quot;: &quot;BR20201528       000&quot;,&#xd;
  &quot;settlementAmt&quot;: 999999.99,&#xd;
  &quot;settlementCurrency&quot;: &quot;HKD&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/charge/v1/calculateCharge/debtor</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 36b - Create Charge Rule" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
  &quot;cancellationCharge&quot;: 0,&#xd;
  &quot;categoryPurpose&quot;: &quot;CXMRCH&quot;,&#xd;
  &quot;chargingScheme&quot;: &quot;P&quot;,&#xd;
  &quot;chargingValue&quot;: 1000,&#xd;
  &quot;creationDatetime&quot;: &quot;2021-02-24T04:07:06.514Z&quot;,&#xd;
  &quot;creationUser&quot;: 0,&#xd;
  &quot;currency&quot;: &quot;HKD&quot;,&#xd;
  &quot;desc&quot;: &quot;DESC&quot;,&#xd;
  &quot;effectiveDate&quot;: &quot;2021-02-26&quot;,&#xd;
  &quot;expiryDate&quot;: &quot;2021-04-10&quot;,&#xd;
  &quot;isCreditor&quot;: true,&#xd;
  &quot;lastApprovalDatetime&quot;: &quot;2021-02-24T04:07:06.514Z&quot;,&#xd;
  &quot;lastApprovalUser&quot;: 0,&#xd;
  &quot;lastUpdateDatetime&quot;: &quot;2021-02-24T04:07:06.514Z&quot;,&#xd;
  &quot;lastUpdateUser&quot;: 0,&#xd;
  &quot;tier&quot;: &quot;99&quot;,&#xd;
  &quot;merchantLevel&quot;: &quot;INDIVIDUAL_MERCHANT&quot;,&#xd;
  &quot;chargeMethod&quot;: &quot;PER_TRANSACTION&quot;,&#xd;
  &quot;chargeAcct&quot;: &quot;&quot;,&#xd;
  &quot;mininumCharge&quot;: 0,&#xd;
  &quot;custom1&quot;: &quot;11111&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/charge/v1/createChargeRule</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 36a - Create Charge Rule" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
  &quot;cancellationCharge&quot;: 0,&#xd;
  &quot;categoryPurpose&quot;: &quot;CXSALA&quot;,&#xd;
  &quot;chargingScheme&quot;: &quot;P&quot;,&#xd;
  &quot;chargingValue&quot;: 10000,&#xd;
  &quot;creationDatetime&quot;: &quot;2021-02-24T04:07:06.514Z&quot;,&#xd;
  &quot;creationUser&quot;: 0,&#xd;
  &quot;currency&quot;: &quot;HKD&quot;,&#xd;
  &quot;desc&quot;: &quot;DESC&quot;,&#xd;
  &quot;effectiveDate&quot;: &quot;2021-02-25&quot;,&#xd;
  &quot;expiryDate&quot;: &quot;2021-02-26&quot;,&#xd;
  &quot;isCreditor&quot;: true,&#xd;
  &quot;lastApprovalDatetime&quot;: &quot;2021-02-24T04:07:06.514Z&quot;,&#xd;
  &quot;lastApprovalUser&quot;: 0,&#xd;
  &quot;lastUpdateDatetime&quot;: &quot;2021-02-24T04:07:06.514Z&quot;,&#xd;
  &quot;lastUpdateUser&quot;: 0,&#xd;
  &quot;tier&quot;: &quot;0&quot;,&#xd;
  &quot;merchantLevel&quot;: &quot;INDIVIDUAL_MERCHANT&quot;,&#xd;
  &quot;chargeMethod&quot;: &quot;PER_TRANSACTION&quot;,&#xd;
  &quot;chargeAcct&quot;: &quot;&quot;,&#xd;
  &quot;mininumCharge&quot;: 0,&#xd;
  &quot;custom1&quot;: &quot;11111&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/charge/v1/createChargeRule</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 40 - listMerchantInfoRecord" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;size&quot;: 9, &quot;offset&quot;: 0, &quot;criteria&quot;:{&quot;merchantName&quot;:&quot;    Generic Telecommunications Limited    &quot;,&quot;custId&quot;:&quot; C088900900189 &quot;,&quot;clientUsrId&quot;:&quot;    root     &quot;,&quot;merchantType&quot;:&quot;  4900  &quot;}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/addressing/v1/listMerchantInfoRecord</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 41.1 - Inward Acceptance Report" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientSysId&quot;: &quot;FPS&quot;,&#xd;
  &quot;clientReqId&quot;: &quot;EI000202103020233337240917154142&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;FPS&quot;,&#xd;
  &quot;businessService&quot;: &quot;EDDA01&quot;,&#xd;
  &quot;msgType&quot;: &quot;EDDA_ACCEPTANCE_REPORT&quot;,&#xd;
  &quot;data&quot;: &quot;{\&quot;requestId\&quot;:\&quot;EI000202103020233337240917154142\&quot;,\&quot;mandateId\&quot;:\&quot;000/202103020233337240917154142\&quot;,\&quot;accepted\&quot;:\&quot;true\&quot;,\&quot;originalMandate\&quot;:{\&quot;mandateType\&quot;:\&quot;UNCONFIRMED_ELECTRONIC_MANDATE\&quot;,\&quot;recurrent\&quot;:true,\&quot;period\&quot;:\&quot;ADHOC\&quot;,\&quot;countPerPeriod\&quot;:0,\&quot;startDate\&quot;:1589932800000,\&quot;expiryDate\&quot;:1672444800000,\&quot;trackingInd\&quot;:false,\&quot;colAmt\&quot;:null,\&quot;colAmtCurrency\&quot;:null,\&quot;maxAmt\&quot;:10000.00,\&quot;maxAmtCurrency\&quot;:\&quot;HKD\&quot;,\&quot;creditorName\&quot;:\&quot;Ho Man Li\&quot;,\&quot;creditorCorporate\&quot;:null,\&quot;creditorCustId\&quot;:null,\&quot;creditorAgent\&quot;:\&quot;000\&quot;,\&quot;creditorAgentBic\&quot;:null,\&quot;creditorAcctId\&quot;:\&quot;0878946223\&quot;,\&quot;creditorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;debtorName\&quot;:\&quot;Ho Man Li\&quot;,\&quot;debtorCorporate\&quot;:null,\&quot;debtorCustId\&quot;:null,\&quot;debtorId1\&quot;:null,\&quot;debtorIdType1\&quot;:null,\&quot;debtorId2\&quot;:null,\&quot;debtorIdType2\&quot;:null,\&quot;debtorId3\&quot;:null,\&quot;debtorIdType3\&quot;:null,\&quot;debtorAgent\&quot;:\&quot;005\&quot;,\&quot;debtorAgentBic\&quot;:null,\&quot;debtorAcctId\&quot;:\&quot;0878946223\&quot;,\&quot;debtorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;ultimateDebtorName\&quot;:\&quot;HOHOHOHOHO\&quot;,\&quot;creditorReference\&quot;:\&quot;EDDA202103020233337240917154142\&quot;}}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.connect_timeout">60000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">60000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 41.2 - Inward Acceptance Report" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientSysId&quot;: &quot;FPS&quot;,&#xd;
  &quot;clientReqId&quot;: &quot;EI000202103020233337240917154142&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;FPS&quot;,&#xd;
  &quot;businessService&quot;: &quot;EDDA01&quot;,&#xd;
  &quot;msgType&quot;: &quot;EDDA_ACCEPTANCE_REPORT&quot;,&#xd;
  &quot;data&quot;: &quot;{\&quot;requestId\&quot;:\&quot;EI000202103020233337240917154142\&quot;,\&quot;mandateId\&quot;:\&quot;000/202103020233337240917154142\&quot;,\&quot;accepted\&quot;:\&quot;true\&quot;,\&quot;originalMandate\&quot;:{\&quot;mandateType\&quot;:\&quot;UNCONFIRMED_ELECTRONIC_MANDATE\&quot;,\&quot;recurrent\&quot;:true,\&quot;period\&quot;:\&quot;ADHOC\&quot;,\&quot;countPerPeriod\&quot;:0,\&quot;startDate\&quot;:1589932800000,\&quot;expiryDate\&quot;:1672444800000,\&quot;trackingInd\&quot;:false,\&quot;colAmt\&quot;:null,\&quot;colAmtCurrency\&quot;:null,\&quot;maxAmt\&quot;:10000.00,\&quot;maxAmtCurrency\&quot;:\&quot;HKD\&quot;,\&quot;creditorName\&quot;:\&quot;Ho Man Li\&quot;,\&quot;creditorCorporate\&quot;:null,\&quot;creditorCustId\&quot;:null,\&quot;creditorAgent\&quot;:\&quot;000\&quot;,\&quot;creditorAgentBic\&quot;:null,\&quot;creditorAcctId\&quot;:\&quot;0878946223\&quot;,\&quot;creditorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;debtorName\&quot;:\&quot;Ho Man Li\&quot;,\&quot;debtorCorporate\&quot;:null,\&quot;debtorCustId\&quot;:null,\&quot;debtorId1\&quot;:null,\&quot;debtorIdType1\&quot;:null,\&quot;debtorId2\&quot;:null,\&quot;debtorIdType2\&quot;:null,\&quot;debtorId3\&quot;:null,\&quot;debtorIdType3\&quot;:null,\&quot;debtorAgent\&quot;:\&quot;005\&quot;,\&quot;debtorAgentBic\&quot;:null,\&quot;debtorAcctId\&quot;:\&quot;0878946223\&quot;,\&quot;debtorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;ultimateDebtorName\&quot;:\&quot;HOHOHOHOHO\&quot;,\&quot;creditorReference\&quot;:\&quot;EDDA202103020233337240917154142\&quot;}}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.connect_timeout">60000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">60000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 41b - Inward Acceptance Report (Cancellation, Accepted)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientSysId&quot;: &quot;FPS&quot;,&#xd;
  &quot;clientReqId&quot;: &quot;EC23820200427JSPSTR0HTWN65ID67YC61W&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;FPS&quot;,&#xd;
  &quot;businessService&quot;: &quot;EDDA01&quot;,&#xd;
  &quot;msgType&quot;: &quot;EDDA_ACCEPTANCE_REPORT&quot;,&#xd;
  &quot;data&quot;: &quot;{\&quot;requestId\&quot;:\&quot;EC23820200427JSPSTR0HTWN65ID67YC61W\&quot;,\&quot;mandateId\&quot;:\&quot;000/202103020233337240917154142\&quot;,\&quot;accepted\&quot;:\&quot;false\&quot;,\&quot;originalMandate\&quot;:{\&quot;mandateType\&quot;:\&quot;UNCONFIRMED_ELECTRONIC_MANDATE\&quot;,\&quot;recurrent\&quot;:true,\&quot;period\&quot;:\&quot;ADHOC\&quot;,\&quot;countPerPeriod\&quot;:0,\&quot;startDate\&quot;:1589932800000,\&quot;expiryDate\&quot;:1672444800000,\&quot;trackingInd\&quot;:false,\&quot;colAmt\&quot;:null,\&quot;colAmtCurrency\&quot;:null,\&quot;maxAmt\&quot;:10000.00,\&quot;maxAmtCurrency\&quot;:\&quot;HKD\&quot;,\&quot;creditorName\&quot;:\&quot;Ho Man Li\&quot;,\&quot;creditorCorporate\&quot;:null,\&quot;creditorCustId\&quot;:null,\&quot;creditorAgent\&quot;:\&quot;000\&quot;,\&quot;creditorAgentBic\&quot;:null,\&quot;creditorAcctId\&quot;:\&quot;0878946223\&quot;,\&quot;creditorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;debtorName\&quot;:\&quot;Ho Man Li\&quot;,\&quot;debtorCorporate\&quot;:null,\&quot;debtorCustId\&quot;:null,\&quot;debtorId1\&quot;:null,\&quot;debtorIdType1\&quot;:null,\&quot;debtorId2\&quot;:null,\&quot;debtorIdType2\&quot;:null,\&quot;debtorId3\&quot;:null,\&quot;debtorIdType3\&quot;:null,\&quot;debtorAgent\&quot;:\&quot;005\&quot;,\&quot;debtorAgentBic\&quot;:null,\&quot;debtorAcctId\&quot;:\&quot;0878946223\&quot;,\&quot;debtorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;ultimateDebtorName\&quot;:\&quot;HOHOHOHOHO\&quot;,\&quot;creditorReference\&quot;:\&quot;EDDA202103020233337240917154142\&quot;}}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">18080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 41c - Inward Acceptance Report (Cancellation, Rejected)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientSysId&quot;: &quot;FPS&quot;,&#xd;
  &quot;clientReqId&quot;: &quot;EC23820200427JSPSTR0HTWN65ID67YC61W&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;FPS&quot;,&#xd;
  &quot;businessService&quot;: &quot;EDDA01&quot;,&#xd;
  &quot;msgType&quot;: &quot;EDDA_ACCEPTANCE_REPORT&quot;,&#xd;
  &quot;data&quot;: &quot;{\&quot;requestId\&quot;:\&quot;EC23820200427JSPSTR0HTWN65ID67YC61W\&quot;,\&quot;mandateId\&quot;:\&quot;000/MNDT0001\&quot;,\&quot;accepted\&quot;:\&quot;false\&quot;,\&quot;originalMandate\&quot;:{}}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 41d - Inward Acceptance Report (Suspension)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientSysId&quot;: &quot;FPS&quot;,&#xd;
  &quot;clientReqId&quot;: &quot;ES10920200929NXEPRMNIO144LF1GT9OTU2&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;FPS&quot;,&#xd;
  &quot;businessService&quot;: &quot;EDDA01&quot;,&#xd;
  &quot;msgType&quot;: &quot;EDDA_ACCEPTANCE_REPORT&quot;,&#xd;
  &quot;data&quot;: &quot;{\&quot;requestId\&quot;:\&quot;ES10920200929NXEPRMNIO144LF1GT9OTU2\&quot;,\&quot;mandateId\&quot;:\&quot;109/20200929093136001\&quot;,\&quot;accepted\&quot;:\&quot;true\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">18080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 44 - namematch create new account mapping record" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	//&quot;accountId&quot;: &quot;&quot;,&#xd;
	&quot;originalNames&quot;:[&quot;Hand of God&quot;,&quot;上市之手&quot;,&quot;𤋮一&quot;]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/namematch/v1/accountNames</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 44 - namematch verify" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;accountId&quot;:&quot;&quot;,&#xd;
	&quot;originalNames&quot;:[&quot;SZIAN LAW E&quot;,&quot;AC 002089001 NAME LINE 2&quot;],&#xd;
	&quot;nameToVerify&quot;:&quot;SZIAN LAW&quot;,&#xd;
	&quot;amount&quot;: 10.00&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">58080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/namematch/v1/accountNames/verify</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 44 - namematch check account" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/namematch/v1/accountNames/0878946223</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 48 - update system config" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;configs&quot;:[{&quot;key&quot;:&quot;bfmg.lock.payd03&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;key&quot;:&quot;bfmg.lock.payd03.verification&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;key&quot;:&quot;ecfps.payment.trigger_inward_onus_d3_payments&quot;,&quot;value&quot;:&quot;false&quot;}]}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/admin/v1/updateSystemConfigs</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 49a - System Event Notification BBLT" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;123123123&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;ADMISV&quot;,&#xd;
   &quot;msgType&quot;: &quot;SYSTEM_EVENT_NOTIFICATION&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;messageId\&quot;:\&quot;123123123\&quot;,\&quot;createDatetime\&quot;:\&quot;2021-07-13T11:11:11.111Z\&quot;,\&quot;eventCode\&quot;:\&quot;BBLT\&quot;,\&quot;eventDesc\&quot;:\&quot;Available balance below threshold\&quot;,\&quot;eventParam\&quot;:[\&quot;HKD10000.00\&quot;],\&quot;eventDatetime\&quot;:\&quot;2021-07-13T11:11:11\&quot;,\&quot;businessService\&quot;:\&quot;ADMISV\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 49b- System Event Notification CBLT" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;123123123&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;ADMISV&quot;,&#xd;
   &quot;msgType&quot;: &quot;SYSTEM_EVENT_NOTIFICATION&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;messageId\&quot;:\&quot;123123123\&quot;,\&quot;createDatetime\&quot;:\&quot;2021-07-13T11:11:11.111Z\&quot;,\&quot;eventCode\&quot;:\&quot;CBLT\&quot;,\&quot;eventDesc\&quot;:\&quot;Available balance of associated CP below threshold\&quot;,\&quot;eventParam\&quot;:[\&quot;HKD10000.00\&quot;,\&quot;852\&quot;,\&quot;HKD123.40\&quot;],\&quot;eventDatetime\&quot;:\&quot;2021-07-13T11:11:11\&quot;,\&quot;businessService\&quot;:\&quot;ADMISV\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 49c- System Event Notification Unknown Code" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;123123123&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;ADMISV&quot;,&#xd;
   &quot;msgType&quot;: &quot;SYSTEM_EVENT_NOTIFICATION&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;messageId\&quot;:\&quot;123123123\&quot;,\&quot;createDatetime\&quot;:\&quot;2021-07-13T11:11:11.111Z\&quot;,\&quot;eventCode\&quot;:\&quot;599G\&quot;,\&quot;eventDesc\&quot;:\&quot;Keep Social Distance\&quot;,\&quot;eventParam\&quot;:[\&quot;No Money\&quot;,\&quot;No Talk\&quot;,\&quot;Limited Customer-to-table ratio\&quot;],\&quot;eventDatetime\&quot;:\&quot;2021-07-13T11:11:11\&quot;,\&quot;businessService\&quot;:\&quot;ADMISV\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 50.1 - Inward Captured Report" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientSysId&quot;: &quot;FPS&quot;,&#xd;
  &quot;clientReqId&quot;: &quot;EI02520201109PM161309&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;FPS&quot;,&#xd;
  &quot;businessService&quot;: &quot;EDDA01&quot;,&#xd;
  &quot;msgType&quot;: &quot;EDDA_CAPTURE_REPORT&quot;,&#xd;
  &quot;data&quot;: &quot;{\&quot;requestId\&quot;:\&quot;EI02520201109PM161309\&quot;,\&quot;mandateId\&quot;:\&quot;025/PM20201109161309\&quot;,\&quot;captured\&quot;: true}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.connect_timeout">60000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">60000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 50.2 - Inward Captured Report" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientSysId&quot;: &quot;FPS&quot;,&#xd;
  &quot;clientReqId&quot;: &quot;EI02520201109PM161309&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;FPS&quot;,&#xd;
  &quot;businessService&quot;: &quot;EDDA01&quot;,&#xd;
  &quot;msgType&quot;: &quot;EDDA_CAPTURE_REPORT&quot;,&#xd;
  &quot;data&quot;: &quot;{\&quot;requestId\&quot;:\&quot;EI02520201109PM161309\&quot;,\&quot;mandateId\&quot;:\&quot;025/PM20201109161309\&quot;,\&quot;captured\&quot;: true}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.connect_timeout">60000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">60000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 53 - Namematch createOrAppend new account mapping" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;accountId&quot;: &quot;456456456&quot;,&#xd;
	&quot;originalNames&quot;:[&quot;MO 64564&quot;,&quot;45039&quot;]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/namematch/v1/accountNames</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-system-id</stringProp>
                <stringProp name="Header.value">JMETER</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-business-service-type</stringProp>
                <stringProp name="Header.value">PAYC03</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-ecfps-message-type</stringProp>
                <stringProp name="Header.value">paymentSupplementInfoCallback</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="false">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 55a - Receipt Mode Switching Notification (Batch)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;123123123&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;ADMISV&quot;,&#xd;
   &quot;msgType&quot;: &quot;RECEIPT_MODE_SWITCHING_NOTIFICATION&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;messageId\&quot;:\&quot;MICL2021111400001786423376\&quot;,\&quot;createDatetime\&quot;:\&quot;2021-11-15T11:00:17.249Z\&quot;,\&quot;clearingCode\&quot;:\&quot;003\&quot;,\&quot;newReceiptMode\&quot;:\&quot;B\&quot;,\&quot;switchingDatetime\&quot;:\&quot;2021-11-15T11:00:17.086Z\&quot;,\&quot;businessService\&quot;:\&quot;ADMISV\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">18080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 55b - Receipt Mode Switching Notification (Realtime)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;123123123&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;ADMISV&quot;,&#xd;
   &quot;msgType&quot;: &quot;RECEIPT_MODE_SWITCHING_NOTIFICATION&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;messageId\&quot;:\&quot;MICL2021111400001786423376\&quot;,\&quot;createDatetime\&quot;:\&quot;2021-11-15T11:05:17.249Z\&quot;,\&quot;clearingCode\&quot;:\&quot;003\&quot;,\&quot;newReceiptMode\&quot;:\&quot;R\&quot;,\&quot;switchingDatetime\&quot;:\&quot;2021-11-15T11:05:17.086Z\&quot;,\&quot;businessService\&quot;:\&quot;ADMISV\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">18080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 56 Addressing Registration Summary Report" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;clientSysId&quot;:&quot;FPS&quot;,&#xd;
	&quot;clientReqId&quot;:&quot;AS04120211115ICG3Q3TM94P2FVN9M0TXPB&quot;,&#xd;
	&quot;clientUsrId&quot;:&quot;FPS&quot;,&#xd;
	&quot;businessService&quot;:&quot;ADDR01&quot;,&#xd;
	&quot;msgType&quot;:&quot;ADDRESSING_REGISTRATION_SUMMARY_REPORT&quot;,&#xd;
	&quot;data&quot;:&quot;{\&quot;clientSysId\&quot;:null,\&quot;clientReqId\&quot;:\&quot;AS04120211115ICG3Q3TM94P2FVN9M0TXPB\&quot;,\&quot;userId\&quot;:null,\&quot;proxyId\&quot;:\&quot;doristoyy@chbank.com\&quot;,\&quot;proxyIdType\&quot;:\&quot;EMAL\&quot;,\&quot;accepted\&quot;:true,\&quot;rejectReason\&quot;:null,\&quot;numberOfAddress\&quot;:2,\&quot;records\&quot;:[{\&quot;custNames\&quot;:[{\&quot;lang\&quot;:\&quot;EN\&quot;,\&quot;fullName\&quot;:null,\&quot;displayedName\&quot;:\&quot;123123\&quot;}],\&quot;agent\&quot;:\&quot;672\&quot;,\&quot;defaultIndicator\&quot;:false,\&quot;purpose\&quot;:\&quot;PAYM\&quot;,\&quot;creationDateTime\&quot;:\&quot;2021-07-05T14:59:32.000\&quot;,\&quot;lastUpdateDateTime\&quot;:\&quot;2021-11-15T17:41:35.000\&quot;},{\&quot;custNames\&quot;:[{\&quot;lang\&quot;:\&quot;EN\&quot;,\&quot;fullName\&quot;:null,\&quot;displayedName\&quot;:\&quot;05 6** 7***\&quot;},{\&quot;lang\&quot;:\&quot;ZH\&quot;,\&quot;fullName\&quot;:null,\&quot;displayedName\&quot;:\&quot;M*S*E*\&quot;}],\&quot;agent\&quot;:\&quot;041\&quot;,\&quot;defaultIndicator\&quot;:true,\&quot;purpose\&quot;:\&quot;PAYM\&quot;,\&quot;creationDateTime\&quot;:\&quot;2021-11-15T17:41:35.000\&quot;,\&quot;lastUpdateDateTime\&quot;:\&quot;2021-11-15T17:41:35.000\&quot;}]}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">9082</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg/v1/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 57 - listAggregatePayment" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;aggregateCriteria&quot;: {&#xd;
    &quot;businessServices&quot;: [&#xd;
      &quot;PAYC03&quot;&#xd;
    ],&#xd;
    &quot;settlementCurrency&quot;: &quot;HKD&quot;,&#xd;
    &quot;settlementDateStart&quot;: &quot;2021-11-24&quot;,&#xd;
    &quot;settlementDateEnd&quot;: &quot;2021-11-24&quot;&#xd;
  },&#xd;
  &quot;groupBy&quot;: [&quot;settlementCurrency&quot;],&#xd;
  &quot;aggregateBy&quot;: &quot;settlementAmt&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/listAggregatePayment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 58 - listCustomConfig" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;criteria&quot;:{&#xd;
		&quot;category&quot;:&quot;ISO20022.ExternalAccountIdentification1Code&quot;&#xd;
	},&#xd;
	&quot;size&quot;:0,&#xd;
	&quot;offset&quot;:0&#xd;
	&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">18080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/admin/v1/listCustomConfig</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 60 - createCustomConfig" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;config&quot;:{&#xd;
	&quot;key&quot;:&quot;AccountEmail.HKD.088900900212&quot;,&#xd;
	&quot;category&quot;:&quot;AccountEmail&quot;,&#xd;
	&quot;value&quot;:&quot;localMerchant@yauchin.com&quot;,&#xd;
	&quot;tags&quot;:[&quot;test&quot;,&quot;scb-boa-email&quot;],&#xd;
	&quot;status&quot;:&quot;a&quot;&#xd;
}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/admin/v1/createCustomConfig</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 61 - updateCustomConfig" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;config&quot;:{&#xd;
	&quot;value&quot;:&quot;aaa@yauchin.com.hk&quot;,&#xd;
	&quot;status&quot;:&quot;A&quot;&#xd;
},&#xd;
&quot;criteria&quot;:{&#xd;
	&quot;id&quot;:3&#xd;
}&#xd;
&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/admin/v1/updateCustomConfig</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 63 - listActivity" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;criteria&quot;:{&#xd;
		&quot;adminId&quot;:0&#xd;
	},&#xd;
	&quot;size&quot;:0,&#xd;
	&quot;offset&quot;:0&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">28080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/admin/v1/listActivity</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 64 - logActivity" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;activity&quot;: 221,&#xd;
	&quot;module&quot;:65536,&#xd;
	&quot;adminId&quot;:1,&#xd;
	&quot;adminName&quot;:&quot;Root (Manual input)&quot;,&#xd;
	&quot;ipAddress&quot;:&quot;127.0.0.1&quot;,&#xd;
&#xd;
	&quot;result&quot;:0,&#xd;
	&quot;detail&quot;:&quot;Failed QQ&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">28080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/admin/v1/logActivity</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 67 - Addressing ProxyIdAmendment" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;accounts&quot;: [&#xd;
    {&#xd;
      &quot;accountNo&quot;: &quot;string&quot;,&#xd;
      &quot;currency&quot;: &quot;str&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;clientReqId&quot;: &quot;string&quot;,&#xd;
  &quot;clientSysId&quot;: &quot;string&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;string&quot;,&#xd;
  &quot;corpCust&quot;: false,&#xd;
  &quot;customerId&quot;: &quot;string&quot;,&#xd;
  &quot;defaultIndicator&quot;: false,&#xd;
  &quot;fullCustNameEn&quot;: &quot;string&quot;,&#xd;
  &quot;fullCustNameZh&quot;: &quot;string&quot;,&#xd;
  &quot;proxyId&quot;: &quot;string&quot;,&#xd;
  &quot;proxyIdType&quot;: &quot;SVID&quot;,&#xd;
  &quot;purpose&quot;: &quot;PAYM&quot;,&#xd;
  &quot;supportedOptions&quot;: [&#xd;
    &quot;EDDA&quot;&#xd;
  ],&#xd;
  &quot;location&quot;: &quot;string&quot;,&#xd;
  &quot;merchantInfo&quot;: {&#xd;
    &quot;FpsCustomerId&quot;: &quot;string&quot;,&#xd;
    &quot;BankCustomerId&quot;: &quot;string&quot;,&#xd;
    &quot;merchantType&quot;: &quot;string&quot;,&#xd;
    &quot;merchantName&quot;: &quot;string&quot;,&#xd;
    &quot;merchantNarrative&quot;: &quot;string&quot;,&#xd;
    &quot;riskLevel&quot;: &quot;HIGH&quot;,&#xd;
    &quot;legalEntityId&quot;: &quot;string&quot;,&#xd;
    &quot;bankAccounts&quot;: [&#xd;
      &quot;string&quot;&#xd;
    ],&#xd;
    &quot;effectiveDate&quot;: &quot;2022-06-15&quot;,&#xd;
    &quot;clientUsrId&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;options&quot;: {&quot;REMOVE_ZH_NAME&quot;:true}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/addressing/v1/proxyIdAmendment?async=false</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">99999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">00000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">ran1</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 67.1 - Addressing ProxyIdAmendment" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;accounts&quot;: [&#xd;
        {&#xd;
            &quot;accountNo&quot;: &quot;68182999089&quot;,&#xd;
            &quot;currency&quot;: &quot;HKD&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;clientReqId&quot;: &quot;AA0002022072713303&quot;,&#xd;
    &quot;clientSysId&quot;: &quot;ifshk&quot;,&#xd;
    &quot;clientUsrId&quot;: &quot;88811822238&quot;,&#xd;
    &quot;corpCust&quot;: false,&#xd;
    &quot;customerId&quot;: &quot;88811822238&quot;,&#xd;
    &quot;defaultIndicator&quot;: true,&#xd;
    &quot;fullCustNameEn&quot;: &quot;LAM NG MAN&quot;,&#xd;
    &quot;fullCustNameZh&quot;: null,&#xd;
    &quot;proxyId&quot;: &quot;+852-63069264&quot;,&#xd;
    &quot;proxyIdType&quot;: &quot;MOBN&quot;,&#xd;
    &quot;purpose&quot;: &quot;PAYM&quot;,&#xd;
    &quot;supportedOptions&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">28080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/addressing/v1/proxyIdAmendment?async=false</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">99999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">00000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">ran1</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 68 - listMandate" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;criteria&quot;:{&#xd;
		&quot;lastUpdateUsr&quot;:&quot;DDAEDataSync&quot;&#xd;
	},&#xd;
	&quot;size&quot;:1,&#xd;
	&quot;offset&quot;:0&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">28080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">edda/v1/listMandateFull</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">99999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">00000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">ran1</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 70 - Outward EDDA Amendment" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientReqId&quot;: &quot;EA000${datetime}${clientReqId}&quot;,&#xd;
  &quot;clientSysId&quot;: &quot;JMETER&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;Alpha&quot;,&#xd;
  &quot;creditorName&quot;: &quot;SHACOMBANK&quot;,&#xd;
  &quot;creditorReference&quot;: &quot;SCBLOADTEST0025165120&quot;,&#xd;
  &quot;debtorName&quot;: &quot;Generic Kindergarten&quot;,&#xd;
  &quot;maxAmt&quot;: 888,&#xd;
  &quot;maxAmtCcy&quot;: &quot;HKD&quot;,&#xd;
  &quot;occurrences&quot;: {&#xd;
    &quot;duration&quot;: {&#xd;
      &quot;fromDate&quot;: &quot;2021-12-13&quot;&#xd;
    },&#xd;
    &quot;frequency&quot;: {&#xd;
      &quot;countPerPeriod&quot;: 1,&#xd;
      &quot;periodType&quot;: &quot;ADHOC&quot;&#xd;
    },&#xd;
    &quot;recurrent&quot;: true&#xd;
  },&#xd;
  &quot;mandateId&quot;: &quot;/025/MNDT202112130025165120/73&quot;,&#xd;
  &quot;reason&quot;: &quot;REQUEST_BY_CUSTOMER&quot;,&#xd;
  &quot;additionalReasonInfo&quot;: &quot;&quot;,&#xd;
  &quot;trackingIndicator&quot;: false,&#xd;
  &quot;ultimateDebtorName&quot;: &quot;LEE MONG NGA&quot;,&#xd;
  &quot;fromCreditor&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">28080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/edda/v1/eddaAmendment?async=true</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 71 - payment resubmitPaymentCallback" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;fpsReferenceNo&quot;:&quot;FRN2020050530eDk48aJ&quot;,&#xd;
	&quot;asCreditor&quot;:false	&#xd;
	&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">28080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/resubmitPaymentCallback</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 72 - autocredit paymentCallback" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;status&quot;:&quot;Success&quot;,&quot;clientReqId&quot;:&quot;AC202005051318140000006&quot;,&quot;clientSysId&quot;:&quot;autocredit&quot;,&quot;data&quot;:{&quot;acctVerificationOption&quot;:&quot;SKIP_PYE_VRF&quot;,&quot;credit&quot;:false,&quot;debtorAcctIdType&quot;:&quot;BBAN&quot;,&quot;creditorAcctIdType&quot;:&quot;BBAN&quot;,&quot;transactionStatus&quot;:&quot;ACSC&quot;,&quot;balanceStatus&quot;:&quot;POSTED&quot;,&quot;targetAcctNoType&quot;:&quot;BBAN&quot;,&quot;type&quot;:&quot;CREDIT_TRANSFER&quot;,&quot;businessService&quot;:&quot;PAYC03&quot;,&quot;outward&quot;:true,&quot;onus&quot;:false,&quot;recipientRealtime&quot;:true,&quot;realtimeOut&quot;:true,&quot;exceptionType&quot;:&quot;NONE&quot;,&quot;exceptionHandlingStatus&quot;:&quot;NONE&quot;,&quot;transactionId&quot;:&quot;AC202005051318140000006&quot;,&quot;fpsReferenceNo&quot;:&quot;FRN2020050530eDk48aJ&quot;,&quot;endToEndId&quot;:&quot;NOTPROVIDED&quot;,&quot;categoryPurpose&quot;:&quot;CXPSNL&quot;,&quot;settlementAmt&quot;:5.00,&quot;settlementCurrency&quot;:&quot;HKD&quot;,&quot;settlementDate&quot;:[2022,3,3],&quot;fpsCharge&quot;:{},&quot;debtorName&quot;:&quot;Ho Mai Li&quot;,&quot;debtorAgent&quot;:&quot;000&quot;,&quot;debtorAcctId&quot;:&quot;0878946223&quot;,&quot;creditorName&quot;:&quot;Generic Technology Company&quot;,&quot;creditorAgent&quot;:&quot;035&quot;,&quot;creditorAcctId&quot;:&quot;005009213555&quot;,&quot;returnReasonInfo&quot;:[null,null],&quot;settlementDatetime&quot;:1588656040253,&quot;statusReason&quot;:&quot;PAY00001&quot;,&quot;statusReasonInfo&quot;:[null,null,null],&quot;balanceReference&quot;:&quot;AC202005051318140000006&quot;,&quot;clearingCode&quot;:&quot;000&quot;,&quot;targetAcctNo&quot;:&quot;0878946223&quot;,&quot;charge&quot;:0.00,&quot;creationDatetime&quot;:1588656039123},&quot;params&quot;:[{&quot;key&quot;:&quot;SKIP_CHARGE&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;key&quot;:&quot;SKIP_DEBIT&quot;,&quot;value&quot;:&quot;true&quot;},{&quot;key&quot;:&quot;SKIP_ACCT_VALIDATION&quot;,&quot;value&quot;:&quot;true&quot;}],&quot;unknownProperty&quot;:&quot;LOL&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">28080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/autocredit/paymentCallback</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">600</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-business-service-type</stringProp>
                <stringProp name="Header.value">PAYC03</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-ecfps-message-type</stringProp>
                <stringProp name="Header.value">PaymentResult</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 74 - Inward EDDA Amendment" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientSysId&quot;: &quot;FPS&quot;,&#xd;
  &quot;clientReqId&quot;: &quot;EC004${date}${clientReqId}&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;FPS&quot;,&#xd;
  &quot;businessService&quot;: &quot;EDDA01&quot;,&#xd;
  &quot;msgType&quot;: &quot;EDDA_AMENDMENT&quot;,&#xd;
  &quot;data&quot;: &quot;{\&quot;requestId\&quot;:\&quot;MA004${date}${clientReqId}\&quot;,\&quot;mandateId\&quot;:\&quot;NOCONVERSION\&quot;,\&quot;reason\&quot;:\&quot;NARRATIVE\&quot;,\&quot;reasonInfo\&quot;:\&quot;BULKUPDATE/2022-12-01\&quot;,\&quot;originalMandate\&quot;:{\&quot;mandateType\&quot;:\&quot;PAPER_BASED_ELECTRONIC_MANDATE\&quot;,\&quot;recurrent\&quot;:true,\&quot;period\&quot;:\&quot;ADHOC\&quot;,\&quot;countPerPeriod\&quot;:999,\&quot;startDate\&quot;:1405353600000,\&quot;expiryDate\&quot;:1538409600000,\&quot;trackingInd\&quot;:false,\&quot;colAmt\&quot;:null,\&quot;colAmtCurrency\&quot;:null,\&quot;maxAmt\&quot;:99999999,\&quot;maxAmtCurrency\&quot;:\&quot;HKD\&quot;,\&quot;creditorName\&quot;:\&quot;SHACOMBANK\&quot;,\&quot;creditorCorporate\&quot;:null,\&quot;creditorCustId\&quot;:null,\&quot;creditorAgent\&quot;:\&quot;008\&quot;,\&quot;creditorAgentBic\&quot;:null,\&quot;creditorAcctId\&quot;:\&quot;77435500038\&quot;,\&quot;creditorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;debtorName\&quot;:\&quot;LEE MONG NGA\&quot;,\&quot;debtorCorporate\&quot;:null,\&quot;debtorCustId\&quot;:null,\&quot;debtorId1\&quot;:null,\&quot;debtorIdType1\&quot;:null,\&quot;debtorId2\&quot;:null,\&quot;debtorIdType2\&quot;:null,\&quot;debtorId3\&quot;:null,\&quot;debtorIdType3\&quot;:null,\&quot;debtorAgent\&quot;:\&quot;004\&quot;,\&quot;debtorAgentBic\&quot;:null,\&quot;debtorAcctId\&quot;:\&quot;4756018190\&quot;,\&quot;debtorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;ultimateDebtorName\&quot;:\&quot;LEE MONG NGA\&quot;,\&quot;creditorReference\&quot;:\&quot;PL47128410${clientReqId}\&quot;},\&quot;creditorAgent\&quot;:\&quot;008\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">28080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 74 - Inward EDDA Initiation (Standard)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientSysId&quot;: &quot;FPS&quot;,&#xd;
  &quot;clientReqId&quot;: &quot;EI025${date}${clientReqId}&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;FPS&quot;,&#xd;
  &quot;businessService&quot;: &quot;EDDA01&quot;,&#xd;
  &quot;msgType&quot;: &quot;EDDA_INITIATION&quot;,&#xd;
  &quot;data&quot;: &quot;{\&quot;requestId\&quot;:\&quot;EI0250000003509385094385043\&quot;,\&quot;mandateId\&quot;:\&quot;025/4593485439875943853453\&quot;,\&quot;mandateType\&quot;:\&quot;PAPER_BASED_ELECTRONIC_MANDATE\&quot;,\&quot;recurrent\&quot;:true,\&quot;period\&quot;:\&quot;ANNUAL\&quot;,\&quot;countPerPeriod\&quot;:1,\&quot;startDate\&quot;:\&quot;2022-12-31\&quot;,\&quot;expiryDate\&quot;:\&quot;2023-12-31\&quot;,\&quot;trackingInd\&quot;:false,\&quot;maxAmt\&quot;:10000,\&quot;maxAmtCurrency\&quot;:\&quot;HKD\&quot;,\&quot;creditorName\&quot;:\&quot;900 Company Limited\&quot;,\&quot;creditorCorporate\&quot;:true,\&quot;creditorCustId\&quot;:\&quot;C900900900900\&quot;,\&quot;creditorAgent\&quot;:\&quot;000\&quot;,\&quot;creditorAcctId\&quot;:\&quot;2497964\&quot;,\&quot;creditorAcctIdType\&quot;:\&quot;SVID\&quot;,\&quot;debtorName\&quot;:\&quot;Test Debtor 025\&quot;,\&quot;debtorAgent\&quot;:\&quot;025\&quot;,\&quot;debtorAcctId\&quot;:\&quot;35345345435\&quot;,\&quot;debtorAcctIdType\&quot;:\&quot;BBAN\&quot;,\&quot;creditorReference\&quot;:\&quot;XXXX4i09tu0e4\&quot;,\&quot;reason\&quot;:\&quot;NEW_EDDA\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">28080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 75 - RTMG outward Captured Report" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;clientSysId&quot;: &quot;FPS&quot;,&#xd;
  &quot;clientReqId&quot;: &quot;EI02520201109PM161309&quot;,&#xd;
  &quot;clientUsrId&quot;: &quot;FPS&quot;,&#xd;
  &quot;businessService&quot;: &quot;EDDA01&quot;,&#xd;
  &quot;msgType&quot;: &quot;PAYMENT_STATUS_REQUEST&quot;,&#xd;
  &quot;data&quot;: &quot;{\&quot;statusReqId\&quot;:\&quot;EI02520201109PM161309\&quot;,\&quot;transactionId\&quot;:\&quot;TXXXXXX\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/rtmgservice/toIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.connect_timeout">60000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">60000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 75 - postTransactionCallBackPOST" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;status&quot;: &quot;success&quot;,&#xd;
  &quot;payment&quot;: {&#xd;
    &quot;id&quot;: 64,&#xd;
    &quot;transactionId&quot;: &quot;CT202311131584639987&quot;,&#xd;
    &quot;fpsReferenceNo&quot;: &quot;FRN202311131584639987&quot;,&#xd;
    &quot;originalFpsReferenceNo&quot;: &quot;&quot;,&#xd;
    &quot;instructionId&quot;: &quot;&quot;,&#xd;
    &quot;endToEndId&quot;: &quot;NOTPROVIDED&quot;,&#xd;
    &quot;acctVerificationOption&quot;: &quot;IMD_STTL&quot;,&#xd;
    &quot;categoryPurpose&quot;: &quot;CXTOPU&quot;,&#xd;
    &quot;credit&quot;: false,&#xd;
    &quot;settlementAmt&quot;: 10000.00,&#xd;
    &quot;settlementCurrency&quot;: &quot;HKD&quot;,&#xd;
    &quot;settlementDate&quot;: &quot;2023-11-12&quot;,&#xd;
    &quot;instructedAmt&quot;: 10000.00,&#xd;
    &quot;instructedCurrency&quot;: &quot;HKD&quot;,&#xd;
    &quot;fpsCharge&quot;: {&#xd;
      &quot;chargeAgent&quot;: &quot;&quot;,&#xd;
      &quot;chargeAgentBic&quot;: &quot;&quot;,&#xd;
      &quot;chargeAmt&quot;: 0,&#xd;
      &quot;chargeCurrency&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;mandateId&quot;: null,&#xd;
    &quot;debtorName&quot;: &quot;Generic Kindergarten&quot;,&#xd;
    &quot;debtorCorporate&quot;: true,&#xd;
    &quot;debtorBic&quot;: null,&#xd;
    &quot;debtorCustId&quot;: null,&#xd;
    &quot;debtorContactMobile&quot;: null,&#xd;
    &quot;debtorContactEmail&quot;: null,&#xd;
    &quot;debtorAgent&quot;: &quot;004&quot;,&#xd;
    &quot;debtorAgentBic&quot;: null,&#xd;
    &quot;debtorAcctId&quot;: &quot;2667343&quot;,&#xd;
    &quot;debtorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
    &quot;creditorName&quot;: &quot;Ho Mai Li&quot;,&#xd;
    &quot;creditorCorporate&quot;: true,&#xd;
    &quot;creditorBic&quot;: null,&#xd;
    &quot;creditorCustId&quot;: null,&#xd;
    &quot;creditorContactMobile&quot;: null,&#xd;
    &quot;creditorContactEmail&quot;: null,&#xd;
    &quot;creditorAgent&quot;: &quot;000&quot;,&#xd;
    &quot;creditorAgentBic&quot;: null,&#xd;
    &quot;creditorAcctId&quot;: &quot;0878946223&quot;,&#xd;
    &quot;creditorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
    &quot;purpose&quot;: &quot;ALLW&quot;,&#xd;
    &quot;purposeInfo&quot;: &quot;string&quot;,&#xd;
    &quot;remittanceInfo&quot;: &quot;SCB UAT#92 inward&quot;,&#xd;
    &quot;returnReason&quot;: null,&#xd;
    &quot;returnReasonInfo&quot;: null,&#xd;
    &quot;transactionStatus&quot;: &quot;CNCL&quot;,&#xd;
    &quot;settlementDatetime&quot;: &quot;2023-11-12T16:05:59.658Z&quot;,&#xd;
    &quot;statusReason&quot;: null,&#xd;
    &quot;statusReasonInfo&quot;: null,&#xd;
    &quot;acctVrfStatus&quot;: &quot;SKIPPED&quot;,&#xd;
    &quot;acctVrfDetail&quot;: {&#xd;
      &quot;accountStatus&quot;: &quot;NOT_CHECKED&quot;,&#xd;
      &quot;amountStatus&quot;: &quot;NOT_CHECKED&quot;,&#xd;
      &quot;currencyStatus&quot;: &quot;NOT_CHECKED&quot;,&#xd;
      &quot;nameStatus&quot;: &quot;NOT_CHECKED&quot;,&#xd;
      &quot;overrideRequired&quot;: true,&#xd;
      &quot;proxyIdStatus&quot;: &quot;NOT_CHECKED&quot;&#xd;
    },&#xd;
    &quot;balanceStatus&quot;: &quot;ON_HOLD&quot;,&#xd;
    &quot;balanceReference&quot;: null,&#xd;
    &quot;clearingCode&quot;: &quot;000&quot;,&#xd;
    &quot;targetAcctNoType&quot;: &quot;BBAN&quot;,&#xd;
    &quot;targetAcctBranch&quot;: &quot;string&quot;,&#xd;
    &quot;targetAcctNo&quot;: &quot;string&quot;,&#xd;
    &quot;chargeReference&quot;: &quot;string&quot;,&#xd;
    &quot;charge&quot;: 0,&#xd;
    &quot;chargeRuleId&quot;: 0,&#xd;
    &quot;type&quot;: &quot;CREDIT_TRANSFER&quot;,&#xd;
    &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
    &quot;outward&quot;: true,&#xd;
    &quot;clientSysId&quot;: &quot;string&quot;,&#xd;
    &quot;clientReqId&quot;: &quot;string&quot;,&#xd;
    &quot;clientUsrId&quot;: &quot;string&quot;,&#xd;
    &quot;returnRefundRequested&quot;: true,&#xd;
    &quot;onus&quot;: true,&#xd;
    &quot;recipientRealtime&quot;: true,&#xd;
    &quot;realtimeOut&quot;: true,&#xd;
    &quot;exceptionType&quot;: &quot;NONE&quot;,&#xd;
    &quot;exceptionMsg&quot;: &quot;string&quot;,&#xd;
    &quot;exceptionHandlingStatus&quot;: &quot;NONE&quot;,&#xd;
    &quot;creationDatetime&quot;: &quot;2023-11-12T16:05:59.658Z&quot;,&#xd;
    &quot;lastUpdateDatetime&quot;: &quot;2023-11-12T16:05:59.658Z&quot;,&#xd;
    &quot;additionalData&quot;: {&#xd;
      &quot;additionalProp1&quot;: {},&#xd;
      &quot;additionalProp2&quot;: {},&#xd;
      &quot;additionalProp3&quot;: {}&#xd;
    },&#xd;
    &quot;custom1&quot;: &quot;string&quot;,&#xd;
    &quot;custom2&quot;: &quot;string&quot;,&#xd;
    &quot;custom3&quot;: &quot;string&quot;,&#xd;
    &quot;custom4&quot;: &quot;string&quot;,&#xd;
    &quot;custom5&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;ledgerTransactions&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: 0,&#xd;
      &quot;paymentId&quot;: 0,&#xd;
      &quot;clearingCode&quot;: &quot;000&quot;,&#xd;
      &quot;creditCard&quot;: true,&#xd;
      &quot;branch&quot;: &quot;string&quot;,&#xd;
      &quot;acctNo&quot;: &quot;string&quot;,&#xd;
      &quot;controlAcctNo&quot;: &quot;string&quot;,&#xd;
      &quot;type&quot;: &quot;CREDIT&quot;,&#xd;
      &quot;credit&quot;: true,&#xd;
      &quot;amt&quot;: 0,&#xd;
      &quot;currency&quot;: &quot;string&quot;,&#xd;
      &quot;reference&quot;: &quot;string&quot;,&#xd;
      &quot;status&quot;: &quot;SUCCESS&quot;,&#xd;
      &quot;returnCode&quot;: &quot;string&quot;,&#xd;
      &quot;returnMsg&quot;: &quot;string&quot;,&#xd;
      &quot;custom&quot;: &quot;string&quot;,&#xd;
      &quot;creationDatetime&quot;: &quot;2023-11-12T16:05:59.658Z&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${SERVER}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/postTransactionCallBackPOST</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
          <stringProp name="HTTPSampler.connect_timeout">60000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">60000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="true">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">30</stringProp>
          <stringProp name="RandomTimer.range">2.5</stringProp>
        </GaussianRandomTimer>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">500</stringProp>
        </ConstantTimer>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="date" elementType="Argument">
              <stringProp name="Argument.name">date</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,date)}</stringProp>
              <stringProp name="Argument.desc">Date string of today in format of yyyyMMdd</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="settlementAmt" elementType="Argument">
              <stringProp name="Argument.name">settlementAmt</stringProp>
              <stringProp name="Argument.value">10000.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ISOdate" elementType="Argument">
              <stringProp name="Argument.name">ISOdate</stringProp>
              <stringProp name="Argument.value">${__time(yyyy-MM-dd,date)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="datetime" elementType="Argument">
              <stringProp name="Argument.name">datetime</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMddhhmmssSSS,date)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SERVER" elementType="Argument">
              <stringProp name="Argument.name">SERVER</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="PORT" elementType="Argument">
              <stringProp name="Argument.name">PORT</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apiKey</stringProp>
              <stringProp name="Header.value">AD2569E2DF1F11E79600080027DC4303</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-system-id</stringProp>
              <stringProp name="Header.value">JMETER</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Complicated Test Case 1 - Outward CT then Inward Refund" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">7200</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="date" elementType="Argument">
              <stringProp name="Argument.name">date</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,date)}</stringProp>
              <stringProp name="Argument.desc">Date string of today in format of yyyyMMdd</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="settlementAmt" elementType="Argument">
              <stringProp name="Argument.name">settlementAmt</stringProp>
              <stringProp name="Argument.value">10000.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ISOdate" elementType="Argument">
              <stringProp name="Argument.name">ISOdate</stringProp>
              <stringProp name="Argument.value">${__time(yyyy-MM-dd,date)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="datetime" elementType="Argument">
              <stringProp name="Argument.name">datetime</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMddhhmmssSSS,date)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apiKey</stringProp>
              <stringProp name="Header.value">AD2569E2DF1F11E79600080027DC4303</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-system-id</stringProp>
              <stringProp name="Header.value">jmeter</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId1" enabled="false">
          <stringProp name="maximumValue">99999</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat">00000</stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed">456574159</stringProp>
          <stringProp name="variableName">clientReqId1</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId2" enabled="false">
          <stringProp name="maximumValue">99999</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat">00000</stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed">1237819</stringProp>
          <stringProp name="variableName">clientReqId2</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 8a - Outward Credit Transfer (PAYC01)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;balanceReference&quot;: &quot;&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC01&quot;,&#xd;
   &quot;categoryPurpose&quot;: &quot;CXPSNL&quot;,&#xd;
   &quot;charge&quot;: 50,&#xd;
   &quot;chargeReference&quot;: &quot;&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT${datetime}1${clientReqId1}${clientReqId2}&quot;,&#xd;
   &quot;clientSysId&quot;: &quot;boa&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;JMETER&quot;,&#xd;
   &quot;creditorAcctId&quot;: &quot;0878946223&quot;,&#xd;
   &quot;creditorAcctIdType&quot;: &quot;BBAN&quot;,&#xd;
   &quot;creditorAgent&quot;: &quot;004&quot;,&#xd;
   &quot;creditorName&quot;: &quot;Johnston&quot;,&#xd;
   &quot;debtorAcctId&quot;: &quot;654791321987&quot;,&#xd;
   &quot;debtorName&quot;: &quot;Generic Kindergarten&quot;,&#xd;
   &quot;instructionId&quot;: &quot;&quot;,&#xd;
   &quot;endToEndId&quot;: &quot;&quot;,&#xd;
   &quot;creditorCustId&quot;: &quot;1111111&quot;,&#xd;
   &quot;creditorCorporate&quot;: false,&#xd;
   &quot;options&quot;: {&quot;SKIP_PROXY_RESOLUTION&quot;: true},&#xd;
   &quot;purpose&quot;: &quot;ALLW&quot;,&#xd;
   &quot;purposeInfo&quot;: &quot;&quot;,&#xd;
   &quot;remittanceInfo&quot;: &quot;0&quot;,&#xd;
   &quot;settlementAmt&quot;: ${settlementAmt},&#xd;
   &quot;settlementCurrency&quot;: &quot;HKD&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">28080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/creditTransfer?async=false</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="false">
            <stringProp name="JSON_PATH">$.data.fpsReferenceNo</stringProp>
            <stringProp name="EXPECTED_VALUE"></stringProp>
            <boolProp name="JSONVALIDATION">false</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">fpsReferenceNo</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.fpsReferenceNo</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 9 - Inward Refund" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;RF${datetime}${clientReqId1}${clientReqId2}&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYR01&quot;,&#xd;
   &quot;msgType&quot;: &quot;RETURN_REFUND&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;categoryPurpose\&quot;: \&quot;RPRFND\&quot;,\&quot;settlementAmt\&quot;: ${settlementAmt},\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;2020-01-16\&quot;, \&quot;instructedAmt\&quot;: 0.01,\&quot;instructedCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAmt\&quot;: 0,\&quot;chargeCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAgent\&quot;: \&quot;\&quot;,\&quot;returnReason\&quot;:\&quot;REFUND_REQUEST_BY_END_CUSTOMER\&quot;, \&quot;returnReasonInfo1\&quot;:\&quot;\&quot;, \&quot;returnReasonInfo2\&quot;:\&quot;\&quot;, \&quot;originalTransactionReference\&quot;:{\&quot;instructionId\&quot;:\&quot;\&quot;,\&quot;endToEndId\&quot;:\&quot;NOTPROVIDED\&quot;,\&quot;categoryPurpose\&quot;: \&quot;CXGOVT\&quot;,\&quot;settlementAmt\&quot;: 10000.00,\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;${ISOdate}\&quot;,\&quot;debtorName\&quot;: \&quot;Generic Kindergarten\&quot;,\&quot;isDebtorCorporate\&quot;: null,\&quot;debtorCustId\&quot;: null,\&quot;debtorBic\&quot;: \&quot;\&quot;,\&quot;debtorContactMobile\&quot;: \&quot;\&quot;,\&quot;debtorContactEmail\&quot;: \&quot;\&quot;,\&quot;debtorAgent\&quot;: \&quot;000\&quot;,\&quot;debtorAgentBic\&quot;: \&quot;\&quot;,\&quot;debtorAcctId\&quot;: \&quot;654791321987\&quot;,\&quot;debtorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;creditorName\&quot;: \&quot;Johnston\&quot;,\&quot;isCreditorCorporate\&quot;: \&quot;false\&quot;,\&quot;creditorCustId\&quot;: \&quot;1111111\&quot;,\&quot;creditorBic\&quot;: \&quot;\&quot;,\&quot;creditorContactMobile\&quot;: \&quot;\&quot;,\&quot;creditorContactEmail\&quot;: \&quot;\&quot;,\&quot;creditorAgent\&quot;: \&quot;004\&quot;,\&quot;creditorAgentBic\&quot;: \&quot;\&quot;,\&quot;creditorAcctId\&quot;: \&quot;0878946223\&quot;,\&quot;creditorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;remittanceInfo\&quot;: \&quot;0\&quot;},\&quot;originalFpsReferenceNo\&quot;:\&quot;${fpsReferenceNo}\&quot;,\&quot;transactionId\&quot;:\&quot;FRNRF2${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;FRN${__threadNum}RF${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;businessService\&quot;:\&quot;PAYR01\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">28080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer between OCT &amp; IRR" enabled="false">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 9 - Inward Return" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;RF${datetime}${clientReqId1}${clientReqId2}&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYR01&quot;,&#xd;
   &quot;msgType&quot;: &quot;RETURN_REFUND&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;categoryPurpose\&quot;: \&quot;RPRTRN\&quot;,\&quot;settlementAmt\&quot;: ${settlementAmt},\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;2020-01-16\&quot;, \&quot;instructedAmt\&quot;: 0.01,\&quot;instructedCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAmt\&quot;: 0,\&quot;chargeCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAgent\&quot;: \&quot;\&quot;,\&quot;returnReason\&quot;:\&quot;REFUND_REQUEST_BY_END_CUSTOMER\&quot;, \&quot;returnReasonInfo1\&quot;:\&quot;\&quot;, \&quot;returnReasonInfo2\&quot;:\&quot;\&quot;, \&quot;originalTransactionReference\&quot;:{\&quot;instructionId\&quot;:\&quot;\&quot;,\&quot;endToEndId\&quot;:\&quot;NOTPROVIDED\&quot;,\&quot;categoryPurpose\&quot;: \&quot;CXGOVT\&quot;,\&quot;settlementAmt\&quot;: 10000.00,\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;${ISOdate}\&quot;,\&quot;debtorName\&quot;: \&quot;Generic Kindergarten\&quot;,\&quot;isDebtorCorporate\&quot;: null,\&quot;debtorCustId\&quot;: null,\&quot;debtorBic\&quot;: \&quot;\&quot;,\&quot;debtorContactMobile\&quot;: \&quot;\&quot;,\&quot;debtorContactEmail\&quot;: \&quot;\&quot;,\&quot;debtorAgent\&quot;: \&quot;000\&quot;,\&quot;debtorAgentBic\&quot;: \&quot;\&quot;,\&quot;debtorAcctId\&quot;: \&quot;654791321987\&quot;,\&quot;debtorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;creditorName\&quot;: \&quot;Johnston\&quot;,\&quot;isCreditorCorporate\&quot;: \&quot;false\&quot;,\&quot;creditorCustId\&quot;: \&quot;1111111\&quot;,\&quot;creditorBic\&quot;: \&quot;\&quot;,\&quot;creditorContactMobile\&quot;: \&quot;\&quot;,\&quot;creditorContactEmail\&quot;: \&quot;\&quot;,\&quot;creditorAgent\&quot;: \&quot;004\&quot;,\&quot;creditorAgentBic\&quot;: \&quot;\&quot;,\&quot;creditorAcctId\&quot;: \&quot;0878946223\&quot;,\&quot;creditorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;remittanceInfo\&quot;: \&quot;0\&quot;},\&quot;originalFpsReferenceNo\&quot;:\&quot;${fpsReferenceNo}\&quot;,\&quot;transactionId\&quot;:\&quot;FRNRF2${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;FRN${__threadNum}RF${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;businessService\&quot;:\&quot;PAYR01\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">28080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg-sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer between OCT &amp; IRR" enabled="true">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Complicated Test Case 2 - Inward CT then Outward Refund" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">7200</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="date" elementType="Argument">
              <stringProp name="Argument.name">date</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMdd,date)}</stringProp>
              <stringProp name="Argument.desc">Date string of today in format of yyyyMMdd</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="settlementAmt" elementType="Argument">
              <stringProp name="Argument.name">settlementAmt</stringProp>
              <stringProp name="Argument.value">10000.00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ISOdate" elementType="Argument">
              <stringProp name="Argument.name">ISOdate</stringProp>
              <stringProp name="Argument.value">${__time(yyyy-MM-dd,date)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="datetime" elementType="Argument">
              <stringProp name="Argument.name">datetime</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMddhhmmssSSS,date)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apiKey</stringProp>
              <stringProp name="Header.value">AD2569E2DF1F11E79600080027DC4303</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-system-id</stringProp>
              <stringProp name="Header.value">jmeter</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId1" enabled="false">
          <stringProp name="maximumValue">99999</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat">00000</stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed">456574159</stringProp>
          <stringProp name="variableName">clientReqId1</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId2" enabled="false">
          <stringProp name="maximumValue">99999</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat">00000</stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed">12378195</stringProp>
          <stringProp name="variableName">clientReqId2</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 3 - Inward Credit Transfer" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;clientSysId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;clientReqId&quot;: &quot;CT${datetime}${clientReqId1}${clientReqId2}&quot;,&#xd;
   &quot;clientUsrId&quot;: &quot;HKICL&quot;,&#xd;
   &quot;businessService&quot;: &quot;PAYC02&quot;,&#xd;
   &quot;msgType&quot;: &quot;CREDIT_TRANSFER&quot;,&#xd;
   &quot;data&quot;: &quot;{\&quot;acctVerificationOption\&quot;: \&quot;IMD_STTL\&quot;,\&quot;categoryPurpose\&quot;: \&quot;CXMRCH\&quot;,\&quot;settlementAmt\&quot;: ${settlementAmt},\&quot;settlementCurrency\&quot;: \&quot;HKD\&quot;,\&quot;settlementDate\&quot;: \&quot;${ISOdate}\&quot;, \&quot;instructedAmt\&quot;: ${settlementAmt},\&quot;instructedCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAmt\&quot;: 0,\&quot;chargeCurrency\&quot;: \&quot;HKD\&quot;,\&quot;chargeAgent\&quot;: \&quot;\&quot;,\&quot;chargeAgentBic\&quot;: \&quot;\&quot;,\&quot;debtorName\&quot;: \&quot;Generic Kindergarten\&quot;,\&quot;isDebtorCorporate\&quot;: false,\&quot;debtorBic\&quot;: \&quot;\&quot;,\&quot;debtorContactMobile\&quot;: \&quot;\&quot;,\&quot;debtorContactEmail\&quot;: \&quot;\&quot;,\&quot;debtorAgent\&quot;: \&quot;004\&quot;,\&quot;debtorAgentBic\&quot;: \&quot;\&quot;,\&quot;debtorAcctId\&quot;: \&quot;654791321987\&quot;,\&quot;debtorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;creditorName\&quot;: \&quot;HO MAI LI\&quot;,\&quot;isCreditorCorporate\&quot;: \&quot;false\&quot;,\&quot;creditorCustId\&quot;: \&quot;\&quot;,\&quot;creditorBic\&quot;: \&quot;\&quot;,\&quot;creditorContactMobile\&quot;: \&quot;\&quot;,\&quot;creditorContactEmail\&quot;: \&quot;\&quot;,\&quot;creditorAgent\&quot;: \&quot;000\&quot;,\&quot;creditorAgentBic\&quot;: \&quot;\&quot;,\&quot;creditorAcctId\&quot;: \&quot;0878946223\&quot;,\&quot;creditorAcctIdType\&quot;: \&quot;BBAN\&quot;,\&quot;purpose\&quot;: \&quot;ALLW\&quot;,\&quot;purposeInfo\&quot;: \&quot;\&quot;,\&quot;remittanceInfo\&quot;: \&quot;Whatever\&quot;,\&quot;settlementDatetime\&quot;: \&quot;${ISOdate}T01:45:26.052Z\&quot;,\&quot;transactionId\&quot;:\&quot;CT${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;fpsReferenceNo\&quot;:\&quot;FRN${datetime}${clientReqId1}${clientReqId2}\&quot;,\&quot;instructionId\&quot;:\&quot;\&quot;,\&quot;endToEndId\&quot;:\&quot;NOTPROVIDED\&quot;,\&quot;businessService\&quot;:\&quot;PAYC02\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.3.60.47</stringProp>
          <stringProp name="HTTPSampler.port">28080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/mceg/sim/fromIcl</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="clientReqId" enabled="false">
            <stringProp name="maximumValue">9999999999</stringProp>
            <stringProp name="minimumValue">1</stringProp>
            <stringProp name="outputFormat">0000000000</stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">clientReqId</stringProp>
          </RandomVariableConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test Case 20 - Outward Refund" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;originalFpsReferenceNo&quot;: &quot;FRN${datetime}${clientReqId1}${clientReqId2}&quot;,&#xd;
	&quot;settlementAmt&quot;:1.00,&#xd;
	&quot;returnReason&quot;:&quot;OTHERS&quot;,&#xd;
	&quot;returnReasonInfo&quot;:[&quot;Test Refund&quot;],&#xd;
&#xd;
	&quot;clientReqId&quot;:&quot;RFFRN${datetime}${clientReqId1}${clientReqId2}&quot;,&#xd;
	&quot;clientUsrId&quot;:&quot;JMETER&quot;,&#xd;
	&quot;clientSysId&quot;:&quot;JMETER&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.3.60.47</stringProp>
          <stringProp name="HTTPSampler.port">28080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/payment/v1/paymentRefund?async=false</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer between ICT &amp; ORR" enabled="false">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
